% \iffalse meta-comment
%/GitFileInfo=tudscr-misc.dtx
%
%  TUD-Script -- Corporate Design of Technische Universität Dresden
% ----------------------------------------------------------------------------
%
%  Copyright (C) Falk Hanisch <hanisch.latex@outlook.com>, 2012-2022
%
% ----------------------------------------------------------------------------
%
%  This work may be distributed and/or modified under the conditions of the
%  LaTeX Project Public License, either version 1.3c of this license or
%  any later version. The latest version of this license is in
%    https://www.latex-project.org/lppl.txt
%  and version 1.3c or later is part of all distributions of
%  LaTeX version 2008-05-04 or later.
%
%  This work has the LPPL maintenance status "maintained".
%
%  The current maintainer and author of this work is Falk Hanisch.
%
% ----------------------------------------------------------------------------
%
% \fi
%
% \iffalse ins:batch + dtx:driver
%<*ins>
\ifx\documentclass\undefined
  \input docstrip.tex
  \ifToplevel{\batchinput{tudscr.ins}}
\else
  \let\endbatchfile\relax
\fi
\endbatchfile
%</ins>
%<*dtx>
\ProvidesFile{tudscr-misc.dtx}[2022/09/03]
\RequirePackage{tudscr-gitinfo}
\documentclass[english,ngerman,xindy]{tudscrdoc}
\iftutex
  \usepackage{fontspec}
\else
  \usepackage[T1]{fontenc}
  \usepackage[ngerman=ngerman-x-latest]{hyphsubst}
\fi
\usepackage{tudscrfonts}
\usepackage{babel}
\usepackage[babel]{microtype}

\GitHubBase{\TUDScriptRepository}
\begin{document}
  \author{Falk Hanisch\TUDScriptContactTitle}
  \maketitle
  \tableofcontents
  \DocInput{\filename}
\end{document}
%</dtx>
% \fi
%
%
%
% \section{Verschiedenes für das \TUDScript-Bundle}
%
% \changes{v2.02}{2014/06/23}{Paket \pkg{titlepage} nicht weiter unterstützt}^^A
% \changes{v2.02}{2014/07/08}{\cs{FamilyKeyState} wird von Optionen genutzt}^^A
%
% Alles, wofür sich eine separate Datei nicht lohnt, landet hier.
% \ToDo{\cs{PreventPackageFromLoading} Pakete scrpage[2] und scrlettr}[v2.07]
% \ToDo{\opt{mathsubscript=true/false/upright/italic}, siehe vlp}[v2.07]
%^^A  % TODO option
%^^A  % TODO catcodes in marcos für true/false
%^^A  \AtBeginDocument{\catcode`\_=12 \mathcode`\_="8000}
%^^A  \tud@newif\if@mathsub@upright
%^^A    \newcommand*\mathsub@set[1]{%
%^^A      \if@mathsub@upright%
%^^A        \sb{\mathrm{#1}}%
%^^A      \else%
%^^A        \sb{\mathit{#1}}%
%^^A      \fi%
%^^A    }
%^^A    \newcommand*\mathsub@swap{}
%^^A    \def\mathsub@swap|#1|{%
%^^A      \begingroup%
%^^A        \swapuprightsubscripts%
%^^A        \mathsub@set{#1}%
%^^A      \endgroup%
%^^A    }
%^^A  \begingroup
%^^A    \catcode`\_=13
%^^A    \gdef_{\@ifnextchar|\mathsub@swap\mathsub@set}%
%^^A  \endgroup
%^^A  \newcommand*\enableuprightsubscripts{\@mathsub@uprighttrue}
%^^A  \newcommand*\disableuprightsubscripts{\@mathsub@uprightfalse}
%^^A  \newcommand*\swapuprightsubscripts{%
%^^A    \if@mathsub@upright%
%^^A      \@mathsub@uprightfalse%
%^^A    \else%
%^^A      \@mathsub@uprighttrue%
%^^A    \fi%
%^^A  }
%
% \iffalse
%<*!(manual|doc)>
%<*class&option>
% \fi
%
% \subsection{Sprungmarken}
%
% \begin{option}{tudbookmarks}
% \begin{macro}{\if@tud@bookmarks}
% Wird das Paket \pkg{hyperref} geladen, so kann die Option \opt{tudbookmarks}
% genutzt werden, um zu steuern, ob für Titel und Inhaltsverzeichnis
% automatisch ein Eintrag für die Sprungmarken erzeugt werden soll.
%    \begin{macrocode}
\tud@newif\if@tud@bookmarks
\TUD@key{tudbookmarks}[true]{%
  \TUD@set@ifkey{tudbookmarks}{@tud@bookmarks}{#1}%
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@bookmarks
% \end{option}^^A tudbookmarks
%
% \iffalse
%</class&option>
%<*class&body>
% \fi
%
% \begin{macro}{\tudbookmark}
% \begin{macro}{\tud@x@hyperref@realfootnotes}
% Die Befehle zum Eintragen der Sprungmarken. Im Dokument kann \cs{tudbookmark}
% auch vom Anwender genutzt werden, um weitere Lesezeichen abhängig von der
% Option \opt{tudbookmarks} manuell zu erzeugen.
%
% Für die Titelseite werden~-- wie auch durch das Paket \pkg{hyperref}~-- die 
% Fußnoten mit dem Befehl \cs{tud@x@hyperref@realfootnotes} auf den originalen 
% Zustand zurückgesetzt.
% \ToDo{nur als internen Befehl definieren, dazugehörige Option nötig?}[v2.07]
% \ToDo{\cs{tud@x@hyperref@realfootnotes} prüfen}[v2.07]
%    \begin{macrocode}
\newcommand*\tudbookmark[1][]{\@gobbletwo}
\newcommand*\tud@x@hyperref@realfootnotes{}
\AfterPackage{hyperref}{%
  \renewcommand*\tudbookmark[3][0]{%
    \relax%
    \if@tud@bookmarks%
      \csuse{phantomsection}%
      \pdfbookmark[{#1}]{#2}{#3}%
    \fi%
  }%
  \renewcommand*\tud@x@hyperref@realfootnotes{%
    \let\Hy@saved@footnotemark\@footnotemark%
    \let\Hy@saved@footnotetext\@footnotetext%
    \let\@footnotemark\H@@footnotemark%
    \let\@footnotetext\H@@footnotetext%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@x@hyperref@realfootnotes
% \end{macro}^^A \tudbookmark
% \begin{macro}{\tud@x@bookmark@startatroot}
% \changes{v2.05}{2015/08/05}{neu}^^A
% Wird das Paket \pkg{bookmark} geladen, können die erzeugten Outlines gezielt 
% auf der obersten Ebene erzeugt werden.
%    \begin{macrocode}
\newcommand*\tud@x@bookmark@startatroot{\relax}
\AfterPackage{bookmark}{%
  \renewcommand*\tud@x@bookmark@startatroot{%
    \if@tud@bookmarks\bookmarksetup{startatroot}\fi%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@x@bookmark@startatroot
% \begin{environment}{titlepage}
% \changes{v2.05}{2015/08/05}{neu}^^A
% \begin{macro}{\@maketitle}
% \changes{v2.05}{2015/08/05}{neu}^^A
% \begin{macro}{\tud@maketitle@inpage}
% \changes{v2.05}{2015/08/05}{neu}^^A
% Ist die Option \opt{tudbookmarks} aktiviert, werden für Umschlag- und 
% Titelseite PDF"~Lesezeichen bzw. Outline-Einträge erzeugt.
%    \begin{macrocode}
%<*book|report|article>
\apptocmd\titlepage{%
  \tud@x@bookmark@startatroot%
  \@tud@res@swafalse%
  \if@tud@coverpage\@tud@res@swatrue\fi%
  \if@titlepageiscoverpage\@tud@res@swatrue\fi%
  \if@tud@res@swa%
    \tudbookmark[%
%<book|report>    0%
%<article>    1%
    ]{\coverpagename}{cover}%
  \else%
    \tudbookmark[%
%<book|report>    0%
%<article>    1%
    ]{\titlepagename}{title}%
  \fi%
}{}{\tud@patch@wrn{titlepage}}
%</book|report|article>
%    \end{macrocode}
% Dies geschieht außerdem auch für die Titelköpfe.
%    \begin{macrocode}
\pretocmd\tud@maketitle@inpage{%
  \tud@x@bookmark@startatroot%
  \tudbookmark[%
%<book|report>  0%
%<article|poster>  1%
  ]{\titlename}{title}%
}{}{\tud@patch@wrn{tud@maketitle@inpage}}
\pretocmd\@maketitle{%
  \tud@x@bookmark@startatroot%
  \tudbookmark[%
%<book|report>  0%
%<article|poster>  1%
  ]{\titlename}{title}%
}{}{\tud@patch@wrn{@maketitle}}
%    \end{macrocode}
% \end{macro}^^A \tud@maketitle@inpage
% \end{macro}^^A \@maketitle
% \end{environment}^^A titlepage
% \begin{macro}{\tableofcontents}
% \begin{macro}{\listoffigures}
% \begin{macro}{\listoftables}
% Für die Verzeichnisse geschieht dies auch. Für das Inhaltsverzeichnis ist 
% hierfür etwas mehr Aufwand notwendig. Für dieses wird im Normalfall keine 
% PDF-Outline erzeugt. Deshalb ist hier ein wenig Trickserei notwendig, um zwar 
% einen Outline-Eintrag für das Inhaltsverzeichnis zu erzeugen, dieses dabei
% aber nicht in sich selbst einzutragen.
%    \begin{macrocode}
\BeforeTOCHead[toc]{%
  \tud@x@bookmark@startatroot%
  \let\@tempc\relax%
  \Iftocfeature{toc}{totoc}{}{%
    \if@tud@bookmarks%
      \setuptoc{toc}{totoc}%
      \tud@cs@store{addtocontents}%
      \def\@tempc{%
        \unsettoc{toc}{totoc}%
        \tud@cs@restore{addtocontents}%
      }%
      \let\addtocontents\@gobbletwo%
    \fi%
  }%
}
\AfterTOCHead[toc]{\@tempc}
\BeforeTOCHead[lof]{\tud@x@bookmark@startatroot}
\BeforeTOCHead[lot]{\tud@x@bookmark@startatroot}
%    \end{macrocode}
% \end{macro}^^A \listoftables
% \end{macro}^^A \listoffigures
% \end{macro}^^A \tableofcontents
%
% \iffalse
%</class&body>
%<*class&option>
% \fi
%
% \subsection{Fußnoten in Überschriften}
%
% Eigentlich sollte die Option \opt{footnotes}|=|\val{symbolheadings} es 
% ermöglichen, Fußnoten mit Symbolen in Überschriften zu verwenden. Umgesetzt 
% werden sollte dies mit dem Paket \pkg{footmisc}. Da dieses aber mit 
% Inkompatibilitäten zu \pkg{hyperref} und \KOMAScript{} aufwartet, wird darauf 
% leider verzichtet.
%^^A% \begin{option}{footnotes}
%^^A% \changes{v2.02}{2014/06/27}{neu}^^A
%^^A% \begin{macro}{\if@tud@symbolheadings}
%^^A% \changes{v2.02}{2014/06/27}{neu}^^A
%^^A% \begin{macro}{\tud@sec@note}
%^^A% \changes{v2.02}{2014/06/27}{neu}^^A
%^^A% \begin{counter}{symbolheadings}
%^^A% \changes{v2.02}{2014/06/27}{neu}^^A
%^^A% Die \KOMAScript-Option \opt{footnotes} wird um den Schlüssel 
%^^A% \val{symbolheadings} erweitert, mit welchem eingestellt werden kann, ob 
%^^A% in den Überschriften Symbole für die Fußnoten anstelle von Zahlen 
%^^A% verwendet werden sollen.
%^^A%    \begin{macrocode}
%^^A\tud@newif\if@tud@symbolheadings
%^^A\TUD@key{footnotes}{%
%^^A  \TUD@set@numkey{footnotes}{@tempa}{%
%^^A    {nosymbolheadings}{0},{numberheadings}{0},%
%^^A    {symbolheadings}{1}%
%^^A  }{#1}%
%^^A  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
%^^A    \ifcase\@tempa\relax% nosymbolheadings
%^^A      \@tud@symbolheadingsfalse%
%^^A    \or% symbolheadings
%^^A      \@tud@symbolheadingstrue%
%^^A    \fi%
%^^A  \fi%
%^^A}
%^^A%    \end{macrocode}
%^^A% Mit \cs{tud@sec@note} wird die Option \opt{footnotes=symbolheadings} 
%^^A% umgesetzt. Hierfür wird das Paket \pkg{footmisc} benötigt.
%^^A%    \begin{macrocode}
%^^A\newcommand*\tud@sec@note[1]{%
%^^A  \ClassWarning{\TUD@Class@Name}{%
%^^A    You have to load package `footmisc' with\MessageBreak%
%^^A    option `stable' in order to use\MessageBreak%
%^^A    footnotes with symbols in headings%
%^^A  }%
%^^A}
%^^A\AfterPackage{footmisc}{%
%^^A  \@ifpackagewith{footmisc}{stable}{%
%^^A    \renewcommand*\tud@sec@note[1]{%
%^^A      \begingroup%
%^^A        \if@tud@symbolheadings%
%^^A          \let\c@footnote\c@symbolheadings%
%^^A          \def\thefootnote{\fnsymbol{symbolheadings}}%
%^^A        \fi%
%^^A        \footnote{#1}%
%^^A      \endgroup%
%^^A    }%
%^^A  }{}%
%^^A}
%^^A%    \end{macrocode}
%^^A% Bei aktivierter Option \opt{footnotes}|=|\val{symbolheadings} wird 
%^^A% dieser Zähler für die Symboleauswahl von Fußnoten in Überschirften 
%^^A% inkrementiert.
%^^A%    \begin{macrocode}
%^^A\AtEndOfClass{%
%^^A%<book|report>  \newcounter{symbolheadings}[chapter]
%^^A%<article|poster>  \newcounter{symbolheadings}
%^^A}
%^^A%    \end{macrocode}
%^^A% \end{counter}^^A symbolheadings
%^^A% \end{macro}^^A \tud@sec@note
%^^A% \end{macro}^^A \if@tud@symbolheadings
%^^A% \end{option}^^A footnotes
%
% \subsection{Papierformat und Schriftgröße}
%
% Insbesondere für Poster aber auch für alle anderen \TUDScript-Klassen wird
% überprüft, ob nach einer Änderung des Standardpapierformates auch die
% Schriftgröße durch den Anwender angepasst wurde. Diese wird jedoch nicht auf
% Plausibilität geprüft, da der Aufwand hierfür relativ hoch wäre. Vielmehr 
% wird davon ausgegangen, dass die explizite Angabe der Schriftgröße bewusst 
% und dem Papierformat sowie den verwendeten Textspalten entsprechend erfolgt.
%
% \begin{macro}{\tud@x@scr@checkoptions}
% \changes{v2.06}{2018/07/31}{neu}^^A
% \begin{macro}{\tud@x@scr@pt}
% \changes{v2.06}{2018/07/31}{neu}^^A
% Das Makro \cs{tud@x@scr@checkoptions} wird mit \cs{DeclareOption*} für alle 
% Optionen aufgerufen, welche kein Mitglied der Familie~\val{TUD} sind. Damit 
% kann auf nicht definierte Schlüssel reagiert werden. Anschließend werden diese
% an die zugrundeliegende \KOMAScript-Klasse weitergereicht.
%    \begin{macrocode}
\newcommand*\tud@x@scr@checkoptions{%
  \expandafter\tud@x@scr@pt\CurrentOption pt\@nil%
  \expandafter\PassOptionsToClass\expandafter{\CurrentOption}{\TUD@Class@KOMA}%
}
%    \end{macrocode}
% Wird die Schriftgröße im veralteten Format \val{\dots pt} als Option
% übergeben, so wird der Schalter \cs{if@tud@x@scr@fontsize@set} auf \val{true} 
% gesetzt.
%    \begin{macrocode}
\newcommand*\tud@x@scr@pt{}
\def\tud@x@scr@pt #1pt#2\@nil{%
  \tud@if@strequal{#2}{pt}{\Ifnumber{#1}{\@tud@x@scr@fontsize@settrue}{}}{}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@x@scr@pt
% \end{macro}^^A \tud@x@scr@checkoptions
%
% \iffalse
%</class&option>
%<*class&body>
% \fi
%
% Wurde das Papierformat jedoch nicht die Schriftgröße geändert, wird eine
% Warnung erzeugt.
%    \begin{macrocode}
\AtBeginDocument{%
  \if@tud@x@scr@fontsize@set\else%
    \@tud@res@swafalse%
    \ifdim\tud@dim@layoutwidth<208mm\relax\@tud@res@swatrue\fi%
    \ifdim\tud@dim@layoutwidth>212mm\relax\@tud@res@swatrue\fi%
    \ifdim\tud@dim@layoutheight<295mm\relax\@tud@res@swatrue\fi%
    \ifdim\tud@dim@layoutheight>299mm\relax\@tud@res@swatrue\fi%
    \if@tud@res@swa%
      \ClassWarningNoLine{\TUD@Class@Name}{%
        You've set a layout size, which is different from\MessageBreak%
        default (paper=a4, paper=portrait). Therefore you\MessageBreak%
        should explicitly specify an font size. See the\MessageBreak%
        manual for further information%
      }%
    \fi%
  \fi%
}
%    \end{macrocode}
%
% \subsection{Fixierte Gleitobjekte für Poster}
%
% \begin{environment}{figurehere}
% \changes{v2.05}{2016/04/17}{neu}^^A
% \changes{v2.06o}{2022/08/02}{für \cls{tudscrposter} übernommen}^^A
% \begin{environment}{tablehere}
% \changes{v2.05}{2016/04/17}{neu}^^A
% \changes{v2.06o}{2022/08/02}{für \cls{tudscrposter} übernommen}^^A
% \begin{macro}{\tud@here@begin}
% \changes{v2.06o}{2022/08/02}{neu}^^A
% \begin{macro}{\tud@here@end}
% \changes{v2.06o}{2022/08/02}{neu}^^A
% Für die Klasse \cls{tudscrposter} werden zwei Umgebungen bereitgestellt, mit 
% denen sich Tabellen und Bilder an einer bestimmten Stelle exakt platzieren
% lassen. Prinzipiell könnte hierfür auch das Paket \pkg{float} zum Einsatz
% kommen. Ursprünglich stammt die Idee aus \cls{tudmathposter} und wurde hier 
% generalisiert implementiert.
% \ToDo{Vergleich mit \env{figure-} und \env{table-} aus \KOMAScript}[v2.07]
%    \begin{macrocode}
%<*poster>
\newcommand*\tud@here@begin[1]{%
  \def\@captype{#1}%
  \vskip\intextsep%
  \color@vbox%
    \normalcolor%
    \vbox\bgroup%
      \hsize=\columnwidth%
      \@parboxrestore%
      \@floatboxreset%
      \@setnobreak%
      \ignorespaces%
}
\newcommand*\tud@here@end{%
      \vskip\intextsep%
      \@minipagefalse%
      \outer@nobreak%
    \egroup%
  \color@endbox%
}
\newenvironment{figurehere}{\tud@here@begin{figure}}{\tud@here@end}
\newenvironment{tablehere}{\tud@here@begin{table}}{\tud@here@end}
%</poster>
%    \end{macrocode}
% \end{macro}^^A \tud@here@end
% \end{macro}^^A \tud@here@begin
% \end{environment}^^A tablehere
% \end{environment}^^A figurehere
%
% \iffalse
%</class&body>
%<*option>
% \fi
%
% \section{Verarbeitung von Optionen und Laden der \KOMAScript"~Klassen}
% \subsection{Sukkzessives Abarbeiten von Optionen im Dokument}
%
% Werden mit \cs{TUDoptions} nach |\begin{document}| mehrere Layoutoptionen 
% gleichzeitig angegeben, muss dafür Sorge getragen werden, dass diese in der 
% korrekten Reihenfolge abgearbeitet werden. 
%
% Das Makro \cs{TUD@SpecialOptionAtDocument} kann innerhalb von \cs{TUD@key} 
% verwendet werden, um einen im obligatorischen Argument angegebenen Schalter 
% zu aktivieren. Dabei wird über \cs{tud@atdocument@hook} garantiert, dass der 
% Befehl \cs{tud@atdocument@process}, welcher für die Abarbeitung der einzelnen 
% Makros in der richtigen Reihenfolge verantwortlich ist, lediglich einmal über 
% \cs{AtEndOfFamilyOptions*} ausgeführt wird.
%
% \begin{macro}{\TUD@SpecialOptionAtDocument}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\tud@atdocument@hook}
% \changes{v2.05}{2016/06/14}{neu}^^A
%    \begin{macrocode}
\newcommand*\tud@atdocument@hook{}
\let\tud@atdocument@hook\relax
\newcommand*\TUD@SpecialOptionAtDocument[1]{}
\AfterEndPreamble{%
  \renewcommand*\TUD@SpecialOptionAtDocument[1]{%
    \ifx\tud@atdocument@hook\relax%
      \gdef\tud@atdocument@hook{\global\let\tud@atdocument@hook\relax}%
      \AtEndOfFamilyOptions*{%
        \tud@atdocument@hook%
        \tud@atdocument@process%
      }%
    \fi%
    \gappto\tud@atdocument@hook{\global\booltrue{@#1}}%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@atdocument@hook
% \end{macro}^^A \TUD@SpecialOptionAtDocument
%
% \iffalse
%</option>
%<*body>
% \fi
%
% \begin{macro}{\tud@atdocument@process}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@font@set}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@math@set}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@relspacing@set}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@x@scr@headings@reset}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@cd@process}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@cdgeometry@process}
% \changes{v2.05}{2016/06/14}{neu}^^A
% Das Makro \cs{tud@atdocument@process} wird im Dokument ausgeführt, wenn 
% mindestens eine Option gesetzt wurde, welche \cs{TUD@SpecialOptionAtDocument} 
% verwendet. Je nachdem, welche Schalter insgesamt aktiviert wurden, werden die 
% dazugehörigen Befehle für die Einstellungen von Schriften, Layout und/oder 
% Satzspiegel in der richtigen Reihenfolge ausgeführt.
%    \begin{macrocode}
\tud@newif\if@tud@font@set
\tud@newif\if@tud@math@set
\tud@newif\if@tud@relspacing@set
%<*class>
\tud@newif\if@tud@x@scr@headings@reset
\tud@newif\if@tud@cd@process
\tud@newif\if@tud@cdgeometry@process
%</class>
\newcommand*\tud@atdocument@process{%
  \if@tud@font@set%
    \tud@font@set%
    \global\@tud@font@setfalse%
    \global\@tud@relspacing@setfalse%
%<class>    \global\@tud@cd@processfalse%
  \fi%
  \if@tud@relspacing@set%
    \tud@relspacing@set%
    \global\@tud@relspacing@setfalse%
  \fi%
  \if@tud@math@set%
    \tud@math@set%
    \global\@tud@math@setfalse%
  \fi%
%<*class>
  \if@tud@x@scr@headings@reset%
    \tud@x@scr@headings@reset%
    \global\@tud@x@scr@headings@resetfalse%
    \global\@tud@cd@processfalse%
  \fi%
  \if@tud@cd@process%
    \tud@cd@process%
    \global\@tud@cd@processfalse%
  \fi%
  \if@tud@cdgeometry@process%
    \tud@cdgeometry@process%
    \global\@tud@cdgeometry@processfalse%
  \fi%
%</class>
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@cdgeometry@process
% \end{macro}^^A \if@tud@cd@process
% \end{macro}^^A \if@tud@x@scr@headings@reset
% \end{macro}^^A \if@tud@relspacing@set
% \end{macro}^^A \if@tud@math@set
% \end{macro}^^A \if@tud@font@set
% \end{macro}^^A \tud@atdocument@process
%
% \iffalse
%</body>
%</!(manual|doc)>
%<*execute>
%<*class&!inherit|package&fonts>
% \fi
%
% \subsection{Versionsabhängige Voreinstellungen}
%
% Voreinstellungen von neu eingeführten Optionen, welche die resultierende 
% Ausgabe entscheidend verändern könnten, werden hier versionsabhängig gesetzt.
% Hierfür wird der Schlüssel \opt{tudscrver} des Mitglieds \val{.comp} vor 
% allen anderen Schlüsseln ausgewertet. Danach kann mit \cs{tud@if@v@lower} auf 
% die gewählte Kompatibilitäsversion getestet werden.
% \ToDo{in tudscr-comp?}[v2.06]
%    \begin{macrocode}
\DeclareOption*{}
\TUDProcessOptions[.comp]\relax
%    \end{macrocode}
% Ab der \TUDScript-Version~v2.05 werden einige vertikale Abstände abhängig von 
% der Schriftgröße definiert. Sollte eine frühere Kompatibilitätseinstellung 
% angegeben worden sein, wird dieses verhalten deaktiviert.
%    \begin{macrocode}
\tud@if@v@lower{2.05}{%
  \TUD@key@preset{relspacing}{false}%
}{%
  \TUD@key@preset{relspacing}{true}%
}
%    \end{macrocode}
% Ab \TUDScript-Version~v2.06 werden die verwendeten Schriften auf \OpenSans 
% gesetzt, für die Komptibilität zu vorherigen Versionen auf \Univers und \DIN.
%    \begin{macrocode}
\tud@if@v@lower{2.06}{%
%<!(class&poster)>  \TUD@key@preset{cdoldfont}{true}%
%<class&poster>  \TUD@key@preset{cdoldfont}{ultrabold}%
  \TUD@key@preset{ttfont}{lmodern}%
%<class>  \TUD@key@preset{headings}{light}%
}{%
%<!(class&poster)>  \TUD@key@preset{cdfont}{true}%
%<class&poster>  \TUD@key@preset{cdfont}{ultrabold}%
  \TUD@key@preset{ttfont}{roboto}%
%<class>  \TUD@key@preset{headings}{heavy}%
}
%    \end{macrocode}
%
% \subsection{Optionen ohne späte Wahlmöglichkeit}
%
% Einige Optionen können nur zum Zeitpunkt des Ladens einer Klasse oder eines 
% Paketes respektive in der Präambel gesetzt werden. Diese müssen \emph{nach}
% \cs{TUDProcessOptions} mit \cs{TUD@key@toolate} redefiniert werden.
% \ToDo{in tudscr-base?}[v2.06]
%
% \begin{macro}{\TUD@key@toolate}
% \changes{v2.06c}{2019/08/20}{neu}^^A
% Dieser Befehl definiert eine Fehlermeldung für Schlüssel respektive Optionen, 
% die zu spät verwendet wurden, wobei er innerhalb der Makros \cs{AtEndOfClass},
% oder \cs{AtEndOfPackage} respektive \cs{AtEndPreamble} genutzt werden sollte.
% Wird dieser im Kontext von Klasse oder Paket (|\@currname.\@currext-h@@k|) 
% verwendet, wird gemeldet, dass der Schlüssel allein beim Laden der Klasse 
% respektive des Paketes genutzt werden darf. Andernfalls wird die zwingende
% Verwendung in der Präambel angemerkt.
%    \begin{macrocode}
\newcommand*\TUD@key@toolate[1]{%
  \csedef{tud@key@toolate@@#1}{%
%<*class>
    \noexpand\ClassError{\noexpand\TUD@Class@Name}%
%</class>
%<*package&fonts>
    \noexpand\PackageError{tudscrfonts}%
%</package&fonts>
    {Option `#1' too late}{%
      Option `#1' can only be set\space%
      \ifcsdef{\@currname.\@currext-h@@k}{%
        as optional \MessageBreak argument while loading\space%
%<*class>
        class `\noexpand\TUD@Class@Name'%
%</class>
%<*package&fonts>
        package `tudscrfonts'%
%</package&fonts>
      }{%
        in the preamble%
      }%
      \MessageBreak but you have tried to set it up later.%
    }%
  }%
  \TUD@key[]{#1}[]%
  {%
    \csuse{tud@key@toolate@@#1}%
    \FamilyKeyStateProcessed%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \TUD@key@toolate
%
% \iffalse
%</class&!inherit|package&fonts>
% \fi
%
% \subsection{Durchreichen von Optionen und Standardeinstellungen}
%
% Es werden die Standardeinstellungen ausgeführt.
%    \begin{macrocode}
%<*class&!inherit|package&fixfonts>
\TUDExecuteOptions{%
%<*class>
%<*book|report|article>
  cd=true,tudbookmarks=true%
%</book|report|article>
%<*poster>
  cd=bicolor,tudbookmarks=false%
%</poster>
%</class>
%<*package&fixfonts>
  headings=heavy%
%</package&fixfonts>
}
%</class&!inherit|package&fixfonts>
%<*manual>
%<*class>
\PassOptionsToClass
%</class>
%<*package>
\TUDoptions
%</package>
{%
  ttfont=roboto,%
%<*package>
  headingsvskip=-6ex,%
%</package>
  cdfoot=true%
}
%<*class>
{\TUD@Class@Parent}
%</class>
\TUD@KOMAoptions{headings=optiontoheadandtoc}
%</manual>
%    \end{macrocode}
% Durchreichen aller Klassenoptionen an die \KOMAScript-Klasse bzw. an die
% genutzte \TUDScript-Elternklasse. Für Klassen wird vor dem Durchreichen noch 
% geprüft, ob ein spezielles Papierformat angegeben wurde.
%    \begin{macrocode}
%<*package>
%<*fonts>
\DeclareOption*{\expandafter\TUD@KOMAoptions\expandafter{\CurrentOption}}
%</fonts>
%<*fixfonts>
\DeclareOption*{%
  \expandafter\PassOptionsToPackage\expandafter{\CurrentOption}%
  {tudscrfonts}%
}
%</fixfonts>
%<*comp>
\DeclareOption*{\expandafter\TUDoptions\expandafter{\CurrentOption}}
%</comp>
%</package>
%<*class>
%<*!inherit>
\DeclareOption*{\tud@x@scr@checkoptions}
%</!inherit>
%<*inherit>
\DeclareOption*{%
  \expandafter\PassOptionsToClass\expandafter{\CurrentOption}%
  {\TUD@Class@Parent}%
}
%</inherit>
%</class>
%    \end{macrocode}
%
% \subsection{Laden der unterlagerten Klassen}
%
% Nach der Auswerung der Optionen wird die korrespondierende \KOMAScript-Klasse 
% bzw. \TUDScript-Elternklasse geladen.
%    \begin{macrocode}
\TUDProcessOptions\relax
%<*class&!inherit>
\LoadClass{\TUD@Class@KOMA}[%
%!TUD@KOMAVersion
]
%</class&!inherit>
%<*class&inherit>
\LoadClass{\TUD@Class@Parent}[%
%!TUD@Version
]
%</class&inherit>
%    \end{macrocode}
%
% \iffalse
%</execute>
%<*manual|doc>
% \fi
%
% \section{Zusätzliches für die Benutzer- und Quelltextdokumentation}
%
% Hier tauchen Hilfsmittel auf, die für die Dokumentation verwendet werden.
%
% \iffalse
%<*option>
% \fi
%
% \subsection{Zusätzliche Pakete}
%
% Bugfixes für unterschiedliche Pakete.
%    \begin{macrocode}
\RequirePackage{scrhack}[%
%!TUD@KOMAVersion
]
%    \end{macrocode}
% Das Paket für intelligente Leerzeichen am Ende von Makros mit \cs{xspace}.
%    \begin{macrocode}
\RequirePackage{xspace}
\xspaceaddexceptions{"=}
%    \end{macrocode}
% Das Paket \pkg{marginnote} stellt nicht fließenden Randnotizen bereit, welche 
% für die Kennzeichnung von Änderungen, Hinweise oder ToDo-Notizen verwendet 
% werden. Die Randnotizen werden auf dem linken~-- weil größeren~-- Seitenrand
% gesetzt.
%    \begin{macrocode}
\PassOptionsToPackage{quiet}{marginnote}
\RequirePackage{marginnote}
%<manual>\reversemarginpar
%    \end{macrocode}
% Das Paket \pkg{shellesc} ermöglicht mit dem Befehl \cs{ShellEscape} die 
% Verwendung von Systembefehlen auf der Kommandozeile unabhängig vom genutzten
% Format. Sollte \app{lualatex} als Dokumentprozessor eingesetzt werden, sind 
% dennoch die beiden \app{pdflatex}-Primitiven \cs{pdf(@)strcmp} und 
% \cs{pdf(@)shellescape} nötig, wofür das Paket \pkg{pdftexcmds} geladen wird.
%    \begin{macrocode}
\RequirePackage{shellesc}
\RequirePackage{pdftexcmds}
%    \end{macrocode}
%
% Das Paket \pkg{hyperref} wird für alle möglichen Links und Querverweise 
% geladen, \pkg{bookmark} verbessert das Erstellen der Outline-Einträge.
%    \begin{macrocode}
\PassOptionsToPackage{%
%<manual>  destlabel=true,%
  colorlinks,%
  hyperindex=false%
}{hyperref}
\AtBeginDocument{%
  \bookmarksetup{%
    open,%
%<*manual>
    openlevel=1,%
%</manual>
%<*doc>
    openlevel=2,%
%</doc>
  }%
}
%    \end{macrocode}
% Es folgen einige Befehle, die an das Paket \pkg{hyperref} gekoppelt sind. 
% Sobald das Paket geladen wurde, werden die Makros mit der jeweiligen
% Funktionalität definiert. 
%    \begin{macrocode}
\AfterAtEndOfPackage*{hyperref}{%
  \@ifpackageloaded{bookmark}{}{\RequirePackage{bookmark}}%
  \hypersetup{%
%<*!manual>
    linkcolor=blue,%
%</!manual>
%<*manual>
    linkcolor=HKS44,%
    urlcolor=HKS33,%
    citecolor=HKS57,%
    filecolor=HKS65,%
%</manual>
    pdfpagelayout=OneColumn%
  }%
}
%    \end{macrocode}
% \begin{macro}{\url}
% \begin{macro}{\nolinkurl}
% \begin{macro}{\hypersetup}
% \begin{macro}{\HyperDestRename}
% \begin{macro}{\href}
% \begin{macro}{\hyperdef}
% \begin{macro}{\hyperref}
% \begin{macro}{\hypertarget}
% \begin{macro}{\hyperlink}
% \begin{macro}{\hyperpage}
% \begin{macro}{\Hy@raisedlink}
% \begin{macro}{\@currentHref}
% Sollte \pkg{hyperref} nicht geladen werden, müssen einige Befehle rudimentär 
% definiert werden.
%    \begin{macrocode}
\TUD@UnwindPackage{hyperref}{%
%<*class>
  \ClassWarningNoLine{\TUD@Class@Name}%
%</class>
%<*package>
  \PackageWarningNoLine{tudscrmanual}%
%</package>
  {%
    Loading the package `hyperref' is strongly\MessageBreak%
    recommended. At the very least, some essential\MessageBreak%
    commands are defined as stubs%
  }%
  \RequirePackage{url}
  \providerobustcmd*\url[1]{\texttt{\detokenize{#1}}}%
  \providerobustcmd*\nolinkurl[1]{\url{#1}}%
  \providecommand*\hypersetup[1]{}%
  \providecommand*\HyperDestRename[2]{}%
  \providerobustcmd*\href[3][]{#3}%
  \providecommand*\hyperdef[4][]{#4}%
  \providerobustcmd*\hyperref{%
    \kernel@ifnextchar[%]
      {\tud@x@hyperref@a}%
      {\tud@x@hyperref@b}%
  }%
  \newcommand*\tud@x@hyperref@a[2][]{#2}%
  \newcommand*\tud@x@hyperref@b[4]{#4}%
  \providecommand*\hypertarget[2]{#2}%
  \providecommand*\hyperlink[2]{#2}%
  \providecommand*\hyperpage[1]{#1}%
  \providecommand*\Hy@raisedlink[1]{#1}%
  \providecommand*\@currentHref{}%
}
%    \end{macrocode}
% \end{macro}^^A \@currentHref
% \end{macro}^^A \Hy@raisedlink
% \end{macro}^^A \hyperpage
% \end{macro}^^A \hyperlink
% \end{macro}^^A \hypertarget
% \end{macro}^^A \hyperref
% \end{macro}^^A \hyperdef
% \end{macro}^^A \href
% \end{macro}^^A \HyperDestRename
% \end{macro}^^A \hypersetup
% \end{macro}^^A \nolinkurl
% \end{macro}^^A \url
% \begin{macro}{\bookmarksetup}
% \begin{macro}{\pdfbookmark}
% \begin{macro}{\currentpdfbookmark}
% \begin{macro}{\subpdfbookmark}
% \begin{macro}{\belowpdfbookmark}
% Für \pkg{bookmark} gilt dies ebenso.
%    \begin{macrocode}
\TUD@UnwindPackage{bookmark}{%
  \providecommand*\bookmarksetup[1]{}%
  \providecommand*\pdfbookmark[3][]{}%
  \providecommand*\currentpdfbookmark[2]{}%
  \providecommand*\subpdfbookmark[2]{}%
  \providecommand*\belowpdfbookmark[2]{}%
}
%    \end{macrocode}
% \end{macro}^^A \belowpdfbookmark
% \end{macro}^^A \subpdfbookmark
% \end{macro}^^A \currentpdfbookmark
% \end{macro}^^A \pdfbookmark
% \end{macro}^^A \bookmarksetup
%
% Etwas Kleinkram für \pkg{babel} und \pkg{csquotes}. Das letztere Paket dient
% dem sprachabhängigen Setzen von Anführungszeichen und sollte erst nach 
% \pkg{inputenc} oder \pkg{inputenx} geladen werden.
%    \begin{macrocode}
\AfterPackage*{babel}{\RequirePackage{csquotes}}
%    \end{macrocode}
% \begin{macro}{\seename}
% \begin{macro}{\alsoname}
% \begin{macro}{\glqq}
% \begin{macro}{\grqq}
% \begin{macro}{\enquote}
%    \begin{macrocode}
\TUD@UnwindPackage{babel}{%
%<*class>
  \ClassWarningNoLine{\TUD@Class@Name}%
%</class>
%<*package>
  \PackageWarningNoLine{tudscrmanual}%
%</package>
    {Package `babel' not loaded}%
  \providecommand*\seename{see}%
  \providecommand*\alsoname{see~also}%
  \providecommand*\glqq{\quotedblbase}%
  \providecommand*\grqq{\textquotedblleft}%
}
\TUD@UnwindPackage{csquotes}{%
%<*class>
  \ClassWarningNoLine{\TUD@Class@Name}%
%</class>
%<*package>
  \PackageWarningNoLine{tudscrmanual}%
%</package>
    {Package `csquotes' not loaded}%
  \providecommand\enquote[1]{\emph{#1}}%
}
%    \end{macrocode}
% \end{macro}^^A \enquote
% \end{macro}^^A \grqq
% \end{macro}^^A \glqq
% \end{macro}^^A \alsoname
% \end{macro}^^A \seename
%
% \iffalse
%<*manual>
% \fi
%
% \subsection{Verarbeitung von Listen}
%
% \begin{macro}{\tud@unique@add}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% \begin{macro}{\tud@unique@eadd}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% \begin{macro}{\tud@unique@xadd}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% \begin{macro}{\tud@unique@csxadd}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% \begin{macro}{\listeremove}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% Ein wenig syntaktischer Zucker für Listen ohne Duplikate.
% \ToDo{in manual prüfen, ob überall genutzt, wo sinnvoll}[v2.06]
%    \begin{macrocode}
\newcommand*\tud@unique@add[2]{%
  \ifinlist{#2}{#1}{}{\listadd#1{#2}}%
}
\newcommand*\tud@unique@eadd[2]{%
  \xifinlist{#2}{#1}{}{\listeadd#1{#2}}%
}
\newcommand*\tud@unique@xadd[2]{%
  \xifinlist{#2}{#1}{}{\listxadd#1{#2}}%
}
\newcommand*\tud@unique@csxadd[2]{%
  \xifinlistcs{#2}{#1}{}{\listcsxadd{#1}{#2}}%
}
\providerobustcmd*\listeremove[2]{%
  \begingroup%
    \edef\etb@tempa{\endgroup\unexpanded{\listremove#1}{#2}}%
  \etb@tempa%
}
%    \end{macrocode}
% \end{macro}^^A \listeremove
% \end{macro}^^A \tud@unique@csxadd
% \end{macro}^^A \tud@unique@xadd
% \end{macro}^^A \tud@unique@eadd
% \end{macro}^^A \tud@unique@add
%
% \subsubsection{Externe Hilfslisten}
%
% Mit den nachfolgenden Makros werden Hilfslisten für die Verwendung mit der 
% aux"~Datei definiert.
%
% \begin{macro}{\tud@auxlist@register}
% \changes{v2.07}{2019/11/08}{neu}^^A
% Hiermit wird eine Hilfsliste initialisiert und die Befehle ausgeführt, um 
% diese am Ende des Dokumentes in die aux"~Datei schreiben und im nachfolgenden 
% Durchlauf wieder einlesen und verarbeiten zu können.
%
% Das obligatorische Argument enthält den Namen der Liste. Das vorherige 
% optionale Argument wird bei der Verarbeitung auf jedes Listenelement 
% angewendet, bevor es zur Liste hinzugefügt oder mit dieser verglichen wird.
% Die Sternversion führt nach dem Einlesen der Liste die enthaltenen Elemente 
% einzeln aus.
%
% Dabei werden drei Makros verwendet. Der Befehl |\|\meta{listname}|@auxlist| 
% enthält die importierte Liste. In |\|\meta{listname}|@auxlist@positive| 
% werden alle potentiellen Einträge in einer Positivliste vorgehalten, die 
% exportiert werden sollen. Da im Verlauf des Dokumentes allerdings bestimmte
% Elemente wieder entfernt werden könnten, wird die Negativliste für diese 
% genutzt. Dieses Konstrukt dient dazu, dass beim Kompilieren des Dokumentes 
% möglicherweise Elemente auftreten, die gar nicht exportiert werden sollen, 
% obwohl diese später der Positivliste hinzugefügt werden könnten.
%    \begin{macrocode}
\NewDocumentCommand\tud@auxlist@register{s D(){\@firstofone} m}{%
  \expandafter\newcommand\expandafter*\csname#3@auxlist\endcsname{}%
  \expandafter\newcommand\expandafter*\csname#3@auxlist@positive\endcsname{}%
  \expandafter\newcommand\expandafter*\csname#3@auxlist@negative\endcsname{}%
  \expandafter\newcommand\expandafter*\csname#3@auxlist@handler\endcsname{#2}%
  \BeforeClosingMainAux{%
    \forlistcsloop{\listcsremove{#3@auxlist@positive}}{#3@auxlist@negative}%
    \tud@auxlist@export{#3}%
  }%
  \AtBeginDocument{\tud@auxlist@import{#3}{#1}}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@auxlist@register
% \begin{macro}{\tud@auxlist@export}
% \changes{v2.07}{2019/11/08}{neu}^^A
% \begin{macro}{\tud@auxlist@import}
% \changes{v2.07}{2019/11/08}{neu}^^A
% Beim Schreiben in die aux"~Datei wird die \pkg{etoolbox}"~Liste in eine 
% Token-Liste umgewandelt.
%    \begin{macrocode}
\newcommand*\tud@auxlist@export[1]{%
  \if@filesw%
    \let\tud@res@a\@empty%
    \def\tud@res@b##1{\eappto\tud@res@a{\@percentchar^^J\@spaces{##1}}}%
    \forlistcsloop\tud@res@b{#1@auxlist@positive}%
    \immediate\write\@mainaux{%
      \string\gdef\expandafter\string\csname #1@auxlist\endcsname%
        {\expandonce\tud@res@a\@percentchar^^J}%
    }%
  \fi%
}
%    \end{macrocode}
% Beim Lesen wird die Token-Liste zurück in eine \pkg{etoolbox}"~Liste 
% gewandelt.
%    \begin{macrocode}
\newcommand*\tud@auxlist@import[2]{%
  \begingroup%
    \edef\tud@res@a{\unexpanded{\@tfor\tud@res@c:=}\csexpandonce{#1@auxlist}}%
    \letcs\tud@res@b{#1@auxlist@handler}%
    \global\cslet{#1@auxlist}\@empty%
    \tud@res@a\do{%
      \edef\tud@res@c{\tud@res@b{\tud@res@c}}%
      \listcsxadd{#1@auxlist}{\expandonce\tud@res@c}%
    }%
  \endgroup%
  \IfBooleanT{#2}{\forlistcsloop{\@firstofone}{#1@auxlist}}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@auxlist@import
% \end{macro}^^A \tud@auxlist@export
% \begin{macro}{\tud@auxlist@add}
% \changes{v2.07}{2019/11/08}{neu}^^A
% \begin{macro}{\tud@auxlist@remove}
% \changes{v2.07}{2019/11/08}{neu}^^A
% \begin{macro}{\tud@auxlist@ifin}
% \changes{v2.07}{2019/11/08}{neu}^^A
% Befehle für das Hinzufügen, Entfernen und Prüfen von Elementen in den Listen.
%    \begin{macrocode}
\newcommand*\tud@auxlist@add[2]{%
  \begingroup%
    \protected@edef\tud@res@a{#2}%
    \edef\tud@res@a{\detokenize\expandafter{\tud@res@a}}%
    \tud@unique@csxadd{#1@auxlist@positive}{\tud@res@a}%
  \endgroup%
}
\newcommand*\tud@auxlist@remove[2]{%
  \begingroup%
    \protected@edef\tud@res@a{#2}%
    \edef\tud@res@a{\detokenize\expandafter{\tud@res@a}}%
    \tud@unique@csxadd{#1@auxlist@negative}{\tud@res@a}%
  \endgroup%
}
\newcommand*\tud@auxlist@ifin[2]{%
  \begingroup%
    \protected@edef\tud@res@a{#1}%
    \letcs\tud@res@b{#2@auxlist@handler}%
    \edef\tud@res@a{%
      \endgroup%
      \noexpand\ifinlistcs{\tud@res@b{\tud@res@a}}{#2@auxlist}%
    }%
  \tud@res@a%
}
%    \end{macrocode}
% \end{macro}^^A \tud@auxlist@ifin
% \end{macro}^^A \tud@auxlist@remove
% \end{macro}^^A \tud@auxlist@add
%
% \subsubsection{Sortieren von Listen}
%
% \begin{macro}{\tud@list@sort}
% \changes{v2.02}{2014/07/25}{neu}^^A
% \begin{macro}{\tud@list@@sort}
% \changes{v2.02}{2014/07/25}{neu}^^A
% \begin{macro}{\tud@list@@@sort}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% \begin{macro}{\tud@list@sorted}
% \changes{v2.02}{2014/07/25}{neu}^^A
% \begin{macro}{\if@tud@list@sorted}
% \changes{v2.02}{2014/07/25}{neu}^^A
% Der Befehl \cs{tud@list@sort} erwartet eine \pkg{etoolbox}-Liste und sortiert 
% diese mit dem Makro \cs{sort@list} in alphabetischer Reihenfolge.
%    \begin{macrocode}
\tud@newif\if@tud@list@sorted
\newcommand*\tud@list@sorted{}
\newcommand*\tud@list@sort[1]{%
  \begingroup%
    \let\tud@list@sorted\@empty%
    \forlistloop\tud@list@@sort{#1}%
    \edef\tud@res@c{%
      \endgroup%
      \unexpanded{\def#1}{\expandonce\tud@list@sorted}%
    }%
  \tud@res@c%
}
%    \end{macrocode}
% Hier erfolgt die eigentliche Sortierung der Liste.
%    \begin{macrocode}
\newcommand*\tud@list@@sort[1]{%
%    \end{macrocode}
% Die Einträge werden mit \cs{pdfstrcmp} an der richtigen Stelle eingefügt. 
% Dabei wird die temporäre Liste \cs{tud@list@sorted} durchlaufen und 
% \cs{tud@res@a} als Hilfsmakro verwendet, in welches die aktuelle Liste 
% innerhalb der \cs{forlistloop}-Schleife stückweise expandiert wird. Wenn das 
% aktuelle Element an der passenden Stelle eingesetzt wurde, wird der Rest von 
% \cs{tud@list@sorted} an \cs{tud@res@a} angehängt und \cs{if@tud@list@sorted} 
% gesetzt.
%    \begin{macrocode}
  \@tud@list@sortedfalse%
  \let\tud@res@a\@empty%
  \forlistloop{\tud@list@@@sort\tud@res@a{#1}}{\tud@list@sorted}%
%    \end{macrocode}
% Wurde der Eintrag nach dem Durchlaufen der Liste nicht eingefügt, so erfolgt 
% dies hier am Ende der Liste.
%    \begin{macrocode}
  \if@tud@list@sorted\else%
    \listadd\tud@res@a{#1}%
  \fi%
%    \end{macrocode}
% Die temporäre Liste \cs{tud@res@a} wird in \cs{tud@list@sorted} geschrieben.
%    \begin{macrocode}
  \let\tud@list@sorted\tud@res@a%
}
%    \end{macrocode}
% Das Makro für die eigentliche Sortierung.
%    \begin{macrocode}
\newcommand*\tud@list@@@sort[3]{%
%    \end{macrocode}
% Ist der Eintrag bereits erfolgt, wird der verbliebene Teil der Liste 
% angehangen.
%    \begin{macrocode}
  \if@tud@list@sorted%
    \listadd#1{#3}%
  \else%
%    \end{macrocode}
% Liegt der Eintrag in alphabetischer Reihenfolge vor dem aktuellen der 
% durchlaufenenen Liste, so wird dieser davor eingefügt. Anschließend wird 
% \cs{@tud@list@sortedtrue} gesetzt.
%    \begin{macrocode}
    \ifnum\pdf@strcmp{#2}{#3}<\z@\relax%
      \listadd#1{#2}%
      \listadd#1{#3}%
      \@tud@list@sortedtrue%
    \else%
%    \end{macrocode}
% Ist Eintrag in alphabetischer Reihenfolge nach dem aktuellen der geprüften 
% Liste, so wird dieser (noch) nicht eingefügt.
%    \begin{macrocode}
      \listadd#1{#3}%
    \fi%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@list@sorted
% \end{macro}^^A \tud@list@sorted
% \end{macro}^^A \tud@list@@@sort
% \end{macro}^^A \tud@list@@sort
% \end{macro}^^A \tud@list@sort
%
% \iffalse
%</manual>
%</option>
%<*body>
% \fi
%
% \subsection{Zusätzliche Markup-Befehle}
%
% \ToDo{als Makro und innerhalb vom Markup setzen}[v2.06]
%    \begin{macrocode}
\AfterEndPreamble{%
  \robustify{~}%
}
%    \end{macrocode}
% \begin{macro}{\@pnumwidth}
% \begin{macro}{\@tocrmarg}
% Etwas mehr Platz im Inhaltsverzeichnis für die Seitenzahlen.
% \ToDo{direkt in die Klassen übernehmen}[v2.07]
%    \begin{macrocode}
\renewcommand*\@pnumwidth{2.1em}
\renewcommand*\@tocrmarg{3.1em}
%    \end{macrocode}
% \end{macro}^^A \@tocrmarg
% \end{macro}^^A \@pnumwidth
% \begin{macro}{\slc}
% \begin{macro}{\bsc}
% \begin{macro}{\txb}
% Befehle für das Setzen von Schrägstrich, Backslash und senkrechtem Strich.
%    \begin{macrocode}
\newrobustcmd*\slc{\kern.1em/\kern.1em}
\newrobustcmd*\bsc{%
  \ifx\f@family\ttdef@ult\kern-.05em\fi%
  \textbackslash%
  \ifx\f@family\ttdef@ult\kern-.05em\fi%
}
\newrobustcmd*\txb{{\raise.05em\hbox{\kern.05em\textbar\kern.05em}}}
%    \end{macrocode}
% \end{macro}^^A \txb
% \end{macro}^^A \bsc
% \end{macro}^^A \slc
% \begin{macro}{\hrfn}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \changes{v2.04}{2015/02/18}{Schriftgröße mit \cs{scalebox}}^^A
% Mit diesem Makro können Hyperlinks im Fließtext erzeugt werden, welche 
% zusätzlich noch die dazugeörige URL als Fußnote anzeigen.
%    \begin{macrocode}
\newcommand*\hrfn[2]{%
  \href{#1}{\trim@spaces{#2}}%
  \footnote{\strut\url{#1}}%
}
%    \end{macrocode}
% \end{macro}^^A \hrfn
% \begin{macro}{\mailto}
% \begin{macro}{\TUDScriptContactTitle}
% \changes{v2.06o}{2022/08/09}{neu}^^A
% Befehle zur Angabe einer verlinkten E"~Mail-Adresse.
%    \begin{macrocode}
\newrobustcmd*\mailto[1]{\mbox{\href{mailto:#1}{\nolinkurl{#1}}}}
\newrobustcmd*\TUDScriptContactTitle{%
  \ifundef\emailaddress{%
    \\\expandafter\mailto\expandafter{\TUDScriptContact}%
  }{%
    \expandafter\emailaddress\expandafter{\TUDScriptContact}%
  }%
}
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{%
    \let\mailto\@firstofone%
    \let\TUDScriptContactTitle\relax%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \TUDScriptContactTitle
% \end{macro}^^A \mailto
% \begin{macro}{\seeplain}
% \changes{v2.05}{2015/11/02}{neu}^^A
% \begin{macro}{\@seeplain}
% Der Befehl \cs{seeplain} kann anstelle von \cs{see} bzw. in der Sternversion
% statt \cs{seealso} genutzt werden.
%    \begin{macrocode}
\NewDocumentCommand\seeplain{s m}{%
  \emph{\mbox{\IfBooleanTF{#1}{\alsoname}{\seename}}}~#2%
}
\NewExpandableDocumentCommand\@seeplain{s m}{%
  \IfBooleanTF{#1}{\alsoname}{\seename}\space#2%
}
%    \end{macrocode}
% \end{macro}^^A \@seeplain
% \end{macro}^^A \seeplain
% \begin{macro}{\Attention}
% \changes{v2.02}{2014/08/16}{neu}^^A
% Falls irgendetwas besonders hervorgehoben werden soll.
%    \begin{macrocode}
\newcommand*\Attention[2][\z@]{%
  \marginnote{%
    \tud@setdim\fboxsep{0.25em}%
    \fbox{Achtung!}%
  }[{#1}]%
  \emph{\trim@spaces{#2}}%
}
%    \end{macrocode}
% \end{macro}^^A \Attention
%
% \subsubsection{Textauszeichnung}
%
% \begin{macro}{\textsbn}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{macro}{\sbnfont}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{macro}{\textsbi}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{macro}{\sbifont}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{macro}{\textttit}
% \changes{v2.06o}{2022/08/03}{neu}^^A
% \begin{macro}{\ttitfont}
% \changes{v2.06o}{2022/08/03}{neu}^^A
% Kombinierte Auszeichnungsbefehle für Text.
%    \begin{macrocode}
\newcommand*\textsbn{}
\newrobustcmd*\sbnfont{\sffamily\bfseries\upshape}
\DeclareTextFontCommand\textsbn{\sbnfont}
\newcommand*\textsbi{}
\newrobustcmd*\sbifont{\sffamily\bfseries\itshape}
\DeclareTextFontCommand\textsbi{\sbifont}
\newcommand*\textttit{}
\newrobustcmd*\ttitfont{\ttfamily\itshape}
\DeclareTextFontCommand\textttit{\ttitfont}
%    \end{macrocode}
% \end{macro}^^A \ttitfont
% \end{macro}^^A \textttit
% \end{macro}^^A \sbifont
% \end{macro}^^A \textsbi
% \end{macro}^^A \sbnfont
% \end{macro}^^A \textsbn
%
% \subsubsection{Logisches Markup}
%
% \begin{macro}{\tud@english}
% Hiermit wird der Argumentsinhalt mit englischen Trennungsmustern gesetzt,
% falls die Sprache geladen wurde.
%    \begin{macrocode}
\newcommand*\tud@english[1]{%
  \tud@language@wrn{english}%
  \let\tud@english\@firstofone%
  #1%
}
\AfterAtEndOfPackage*{babel}{%
  \AfterEndPreamble{%
    \renewcommand*\tud@english[1]{\foreignlanguage{english}{#1}}%
  }%
}
\AfterAtEndOfPackage*{polyglossia}{%
  \AfterEndPreamble{%
    \tud@if@language@loaded{english}{%
      \renewcommand*\tud@english[1]{\foreignlanguage{english}{#1}}%
    }{}%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@english
% \begin{macro}{\KOMAScript}
% \begin{macro}{\TUDScript}
% \begin{macro}{\vKOMAScript}
% \begin{macro}{\vTUDScript}
% Zur robusten Verwendung im Text und Anpassungen für \pkg{hyperref}.
%    \begin{macrocode}
\kernel@make@fragile\KOMAScript
\edef\KOMAScript{\noexpand\mbox{\expandonce\KOMAScript}\noexpand\xspace}
\robustify\KOMAScript
\robustify\TUDScript
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{%
    \def\KOMAScript{KOMA-Script{}}%
    \def\TUDScript{TUD-Script{}}%
  }%
}
%    \end{macrocode}
% Diese Befehle geben in der Dokumentation die aktuelle Version von \TUDScript
% sowie die mindestens notwendige Version von \KOMAScript{} aus. Sollte es 
% notwendig sein, auf die Hauptversion zu verweisen, ist die Sternversion
% zu verwenden.
%    \begin{macrocode}
\NewExpandableDocumentCommand\vKOMAScript{s m}{%
  \IfArgIsEmpty{#2}{}{#2~}v\csuse{TUD@KOMAVersion\IfBooleanT{#1}{@}Number}%
}
\NewExpandableDocumentCommand\vTUDScript{s m}{%
  \IfArgIsEmpty{#2}{}{#2~}v\csuse{TUDScriptVersion\IfBooleanT{#1}{@}Number}%
}
%    \end{macrocode}
% \end{macro}^^A \vTUDScript
% \end{macro}^^A \vKOMAScript
% \end{macro}^^A \TUDScript
% \end{macro}^^A \KOMAScript
% \begin{macro}{\CD}
% \begin{macro}{\CDs}
% \begin{macro}{\TUD}
% \begin{macro}{\TnUD}
% \begin{macro}{\TUDCD}
% \changes{v2.05}{2015/11/01}{neu}^^A
% \begin{macro}{\TUDCDs}
% \changes{v2.05}{2015/11/01}{neu}^^A
% \begin{macro}{\DDC}
% Diese Befehle stellen regelmäßig in der Quelltextdokumentatuion und im 
% Handbuch genutzte Textbausteine bereit. Dazu wird der Befehl \cs{xspace} aus 
% dem \pkg{xspace}-Paket genutzt.
%    \begin{macrocode}
\newrobustcmd*\CD{\tud@english{Corporate Design}\xspace}
\newrobustcmd*\CDs{\tud@english{Corporate Designs}\xspace}
\newrobustcmd*\TUD{Technische Universit\"at Dresden\xspace}
\newrobustcmd*\TnUD{Technischen Universit\"at Dresden\xspace}
\newcommand*\TUDCD{\CD der \TnUD}
\newcommand*\TUDCDs{\CDs der \TnUD}
\newrobustcmd*\DDC{%
  \mbox{%
    D\kern.05em R\kern.05em E\kern.05em S\kern.05em %
    D\kern.05em E\kern.05em N\kern.1em-\kern.1em concept%
  }\xspace%
}
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{%
    \def\CD{Corporate Design{}}%
    \def\CDs{Corporate Designs{}}%
    \def\TUD{Technische Universit\"at Dresden{}}%
    \def\TnUD{Technischen Universit\"at Dresden{}}%
    \def\DDC{DRESDEN-concept{}}%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \DDC
% \end{macro}^^A \TUDCDs
% \end{macro}^^A \TUDCD
% \end{macro}^^A \TnUD
% \end{macro}^^A \TUD
% \end{macro}^^A \CDs
% \end{macro}^^A \CD
% \begin{macro}{\OpenSans}
% \changes{v2.06}{2018/07/02}{neu}^^A
% \begin{macro}{\Univers}
% \begin{macro}{\DIN}
% Für die Nennung der Schriften spezielle Markos bereitgestellt.
%    \begin{macrocode}
\newrobustcmd*\OpenSans{\textcdbn{Open~Sans}\xspace}
\newrobustcmd*\Univers{\textcdbi{Univers}\xspace}
\newrobustcmd*\DIN{\textcdbi{DIN~Bold}\xspace}
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{%
    \def\OpenSans{Open Sans{}}%
    \def\Univers{Univers{}}%
    \def\DIN{DIN Bold{}}%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \DIN
% \end{macro}^^A \Univers
% \end{macro}^^A \OpenSans
%
% \subsubsection{Markup für Links}
%
% \begin{macro}{\tud@url@normalize}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% URL-Pfade sauber schreiben und Trennzeichen ggf. ergänzen. Die Sternversion 
% liefert \cs{relax} zurück, wenn das letzte obligatorische Argument leer ist.
%    \begin{macrocode}
\NewDocumentCommand\tud@url@normalize{s m O{https://} m m}{%
  \begingroup%
    \edef\tud@res@a{\trim@spaces{#5}}%
    \def\tud@res@b##1#4/##2#4/##3\@nil{%
      \IfArgIsEmpty{##2}{%
        \def\tud@res@c{##1}%
      }{%
        \def\tud@res@c{##2}%
      }%
    }%
    \expandafter\tud@res@b\tud@res@a #4/#4/\@nil%
    \tud@remove@enfold@char\tud@res@c{/}%
    \edef\tud@res@b{%
      \endgroup%
      \unexpanded{\def#2}{#3#4/\tud@res@c}%
      \IfBooleanT{#1}{\ifdefvoid\tud@res@a{\unexpanded{\let#2\relax}}{}}%
    }%
  \tud@res@b%
}
%    \end{macrocode}
% \end{macro}^^A \tud@url@normalize
% \begin{macro}{\GitHubBase}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% \begin{macro}{\tud@github@url@base}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% \begin{macro}{\tud@github@url@normalize}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% \begin{macro}{\tud@github@url@error}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% Angabe der URL des verwendeten GitHub-Repository.
%    \begin{macrocode}
\newcommand*\tud@github@url@normalize[2]{%
  \tud@url@normalize*#1{github.com}{#2}%
}
\newcommand*\tud@github@url@base{}
\let\tud@github@url@base\relax
\NewDocumentCommand\GitHubBase{m}{%
  \tud@github@url@normalize\tud@github@url@base{#1}%
}
\newcommand*\tud@github@url@error{%
%<*class>
  \ClassError{\TUD@Class@Name}%
%</class>
%<*package>
  \PackageError{tudscrmanual}%
%</package>
    {GitHub repository missing}%
    {%
      No default GitHub repository was set with\MessageBreak%
      `\detokenize{\GitHubBase{<url>}}'. You should either\MessageBreak%
      set a default one or pass it as argument.%
    }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@github@url@error
% \end{macro}^^A \tud@github@url@normalize
% \end{macro}^^A \tud@github@url@base
% \end{macro}^^A \GitHubBase
% \begin{macro}{\GitHubRepo}
% \changes{v2.02}{2014/08/16}{neu}^^A
% Auszeichnungsbefehle für Verweise auf ein GitHub-Repository. Standardmäßig 
% wird die mit \cs{GitHubBase} respektive mit dem optionalen Argument in runden 
% Klammern gegebene Repository-URL für die Ausgabe genutzt, wobei hierfür der
% letzte Teil des Pfades verwendet wird. Mit dem ersten optionalen Argument 
% kann dies überschrieben werden. Mit dem optionalen Argument in Guillemets
% kann entweder mit einem numerischen Wert auf ein Issue oder aber auf ein 
% Unterpfad der gegebenen URL verlinkt werden.
%    \begin{macrocode}
\NewDocumentCommand\GitHubRepo{d<> d'' o}{%
  \begingroup%
    \def\tud@res@a{\href}%
    \IfValueT{#1}{\tud@github@url@normalize\tud@github@url@base{#1}}%
    \ifdefvoid\tud@github@url@base{%
      \def\tud@res@a{\tud@github@url@error\@secondoftwo}%
      \def\tud@github@url@base{??}%
    }{}%
    \IfValueTF{#3}{%
%    \end{macrocode}
% Um \pkg{babel}-Shorthands im letzten optionalen Argument nutzen zu können, 
% ist \cs{@safe@activesfalse} notwendig (\GitHubRepo<latex3/hyperref>'149').
%    \begin{macrocode}
      \def\tud@res@c{\csuse{@safe@activesfalse}#3{}}%
    }{%
      \expandafter\filename@parse\expandafter{\tud@github@url@base}%
      \edef\tud@res@c{%
        \noexpand\tud@english{%
          \unexpanded{GitHub\mbox{-}Repository~\textsbn}{\filename@base}%
        }%
      }%
    }%
    \IfValueT{#2}{%
      \edef\tud@res@b{\trim@spaces{#2}}%
      \Ifnumber{\tud@res@b}{%
        \IfValueF{#3}{\eappto\tud@res@c{\unskip\#\tud@res@b}}%
        \eappto\tud@github@url@base{/issues/\tud@res@b}%
      }{%
        \tud@remove@enfold@char\tud@res@b{/}%
        \eappto\tud@github@url@base{/\tud@res@b}%
      }%
    }%
    \protected@edef\tud@res@a{%
      \endgroup%
      \expandonce\tud@res@a{\tud@github@url@base}{\expandonce\tud@res@c}%
    }%
  \tud@res@a\xspace%
}
%    \end{macrocode}
% \end{macro}^^A \GitHubRepo
% \begin{macro}{\GitHubDownload}
% \changes{v2.05g}{2016/11/08}{neu}^^A
% Der Befehl für die Angabe von direkten Downloadlinks.
%    \begin{macrocode}
\NewDocumentCommand\GitHubDownload{d<> d'' o m}{%
  \begingroup%
    \def\tud@res@a{\href}%
    \IfValueT{#1}{\tud@github@url@normalize\tud@github@url@base{#1}}%
    \ifdefvoid\tud@github@url@base{%
      \def\tud@res@a{\tud@github@url@error\@secondoftwo}%
      \def\tud@github@url@base{??}%
    }{}%
    \IfValueTF{#2}{%
      \edef\tud@res@b{\trim@spaces{#2}}%
      \tud@remove@enfold@char\tud@res@b{/}%
      \eappto\tud@github@url@base{/releases/download/\tud@res@b}%
    }{%
      \appto\tud@github@url@base{/releases/latest/download}%
    }%
    \appto\tud@github@url@base{/#4}%
    \IfValueTF{#3}{%
      \def\tud@res@c{\csuse{@safe@activesfalse}#3{}}%
    }{%
      \def\tud@res@c{\textttit{#4}}%
    }%
    \protected@edef\tud@res@a{%
      \endgroup%
      \expandonce\tud@res@a{\tud@github@url@base}{\expandonce\tud@res@c}%
    }%
  \tud@res@a%
}
%    \end{macrocode}
% \end{macro}^^A \GitHubDownload
% \begin{macro}{\CTAN}
% \changes{v2.05}{2015/11/22}{neu}^^A
% \begin{macro}{\tud@ctan@url@normalize}
% \changes{v2.06p}{2022/09/20}{neu}^^A
% Das Markup für einen Link auf \CTAN.
%    \begin{macrocode}
\newcommand*\tud@ctan@url@normalize[2]{%
  \tud@url@normalize#1{ctan.org}{#2}%
}
\NewDocumentCommand\CTAN{d<> o}{%
  \begingroup%
    \def\tud@res@a{\href}%
    \tud@ctan@url@normalize\tud@res@d{\IfValueT{#1}{#1}}%
    \IfValueTF{#2}{%
      \def\tud@res@c{\csuse{@safe@activesfalse}#2{}}%
    }{%
      \def\tud@res@c{%
        \tud@english{Comprehensive \Lettering{TeX} Archive Network~(CTAN)}%
      }%
    }%
    \protected@edef\tud@res@a{%
      \endgroup%
      \expandonce\tud@res@a{\tud@res@d}{\expandonce\tud@res@c}%
    }%
  \tud@res@a\xspace%
}
%    \end{macrocode}
% \end{macro}^^A \tud@ctan@url@normalize
% \end{macro}^^A \CTAN
% \begin{macro}{\scrguide}
% \changes{v2.02}{2014/09/04}{neu}^^A
% \changes{v2.05}{2015/07/23}{Hyperlinktext über optionales Argument}^^A
%    \begin{macrocode}
%<*manual>
\NewDocumentCommand\scrguide{O{\KOMAScript-Handbuch}}{%
  \begingroup%
    \Entity@Link@Seek\tud@res@a{Bundle}{koma-script}%
    \tud@specialurl@wrapper\tud@res@a{\tud@res@a}%
    \tud@res@a{#1{}}%
  \endgroup%
  \xspace%
}
%</manual>
%    \end{macrocode}
% \end{macro}^^A \scrguide
%
% \subsubsection{Setzen von Schriftzügen}
%
% Zum Setzen verschiedenster Logos und Schriftzüge gibt es eigentlich das Paket 
% \pkg{hologo}. Allerdings ist es auf die \Lettering{LaTeX}"=Standardschriften 
% ausgelegt. Insbesondere das Kerning harmoniert nicht mit den Schriften der 
% \OpenSans, weshalb hier die benötigten Schriftzüge mit \cs{tud@lttr@define} 
% definiert werden. Mit \cs{Lettering}\marg{name} können diese gesetzt werden.
% \ToDo{in tudscr-fonts übernehmen}[v2.07]
%
% \begin{macro}{\tud@if@cdfont@activated}
% \changes{v2.06p}{2022/10/28}{neu}^^A
% Mit \cs{tud@if@cdfont@activated} kann geprüft werden, ob die \OpenSans 
% überhaupt verfügbar und gegebenenfalls aktiviert ist.
%    \begin{macrocode}
\newcommand*\tud@if@cdfont@activated{}
\let\tud@if@cdfont@activated\@secondoftwo
\AtBeginDocument{%
  \ifdefined\if@tud@cdfont@active
    \expandafter\@firstofone%
  \else%
    \expandafter\@gobble%
  \fi{%
    \renewcommand*\tud@if@cdfont@activated{%
      \if@tud@cdfont@active%
        \expandafter\@firstoftwo%
      \else%
        \expandafter\@secondoftwo%
      \fi%
    }%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@if@cdfont@activated
%
% \begin{macro}{\tud@lttr@kern}
% \begin{macro}{\tud@lttr@shift}
% \begin{macro}{\tud@lttr@topscript}
% \begin{macro}{\tud@lttr@reflect}
% Diese Befehle dienen dazu, nachfolgend spezielle Schriftzüge zu definieren, 
% welche Kerning, vertikales Verschieben oder Skalieren einzelner Lettern 
% ermöglichen. Die Implemetierung ist stark am Paket \pkg{hologo} orientiert.
%
% Mit \cs{tud@lttr@kern} wird Kerning eingefügt, wobei im obligatorischen 
% Argument ein prozentualer Faktor für den Basiswert \val{1em} angegeben wird. 
% Mit dem optionalen Argument kann ggf. zusätzliches Kerning für den kursiven 
% Schriftschnitt definiert werden.
%    \begin{macrocode}
\newcommand*\tud@lttr@kern[2][0]{%
  \kern\dimexpr1em*%
    \numexpr\ifdim\the\fontdimen\@ne\font>\z@#1+\fi#2\relax%
  /100\relax%
}
%    \end{macrocode}
% Dieser Befehl verschiebt den im zweiten Argument angegebenen Inhalt vertikal 
% um Basiswert \val{1ex} mutlipliziert mit dem prozentualer Faktor im ersten 
% Argument.
%    \begin{macrocode}
\newcommand*\tud@lttr@shift[2]{%
  \lower\dimexpr1ex*#1/100\relax\hbox{#2}%
}
%    \end{macrocode}
% Der im zweiten Argument gegebene Inhalt wird mit \cs{scriptsize} auf der Höhe
% des im ersten Argumentes angegebenen Inhaltes ausgegeben.
%    \begin{macrocode}
\newcommand*\tud@lttr@topscript[2]{%
  \begingroup%
    \setbox\z@\hbox{#1}%
    \vbox to\ht\z@{%
      \hbox{%
        \check@mathfonts%
        \fontsize\sf@size\z@%
        \math@fontsfalse\selectfont%
        #2%
      }%
      \vss%
    }%
  \endgroup%
}
%    \end{macrocode}
% Um den Schriftzug für \Lettering{XeLaTeX} bauen zu können, wird das Paket 
% \pkg{l3draw} bemüht, womit beliebige Eingaben transformiert werden können. 
% Hier wird es genutzt, um das Argument vertikal zu spiegeln und gegebenenfalls 
% die Neigung an die aktuelle Schrift anzupassen.
%    \begin{macrocode}
\RequirePackage{l3draw}
\ExplSyntaxOn
\newcommand*\tud@lttr@reflect[1]{%
  \begingroup%
  \rlap{%
    \draw_begin:
    \hcoffin_set:Nn \l_tmpa_coffin{ #1 }
    \draw_transform_xslant:n{ \the\dimexpr\fontdimen\@ne\font*2\relax }
    \draw_transform_xscale:n{ -1 }
    \draw_coffin_use:Nnn \l_tmpa_coffin { hc } { vc }
    \draw_end:
  }%
  \hphantom{#1}%
  \endgroup%
}
\ExplSyntaxOff
%    \end{macrocode}
% \end{macro}^^A \tud@lttr@reflect
% \end{macro}^^A \tud@lttr@topscript
% \end{macro}^^A \tud@lttr@shift
% \end{macro}^^A \tud@lttr@kern
%
% \begin{macro}{\tud@lttr@define}
% \begin{macro}{\tud@lttr@alias}
% \begin{macro}{\tud@lttr@list}
% Die Schriftzüge werden mit \cs{tud@lttr@define} definiert und in der Liste 
% \cs{tud@lttr@list} registriert. In das obligatorische Argument wird die 
% Bezeichnungen übergeben, welche als Argument von \cs{Lettering} zu verwenden 
% ist. Das optionale Argument kann genutzt werden, um alternative Bezeichnungen 
% zu definieren.
%    \begin{macrocode}
\newcommand*\tud@lttr@list{}
\newcommand*\tud@lttr@define[3][]{%
  \expandafter\newcommand\expandafter*%
    \csname\detokenize{tud@lettering@#2}\endcsname{#3}%
  \listadd\tud@lttr@list{#2}%
  \forcsvlist{\tud@lttr@alias{#2}}{#1}%
}
\newcommand*\tud@lttr@alias[2]{%
  \csdef{\detokenize{tud@lettering@#2}}{\csuse{\detokenize{tud@lettering@#1}}}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@lttr@list
% \end{macro}^^A \tud@lttr@alias
% \end{macro}^^A \tud@lttr@define
%
% \begin{macro}{\Lettering}
% \changes{v2.06p}{2022/10/28}{neu}^^A
% Der Anwenderbefehl zum Setzen der Schriftzüge.
%    \begin{macrocode}
\newrobustcmd*\Lettering[1]{%
  \ifcsundef{\detokenize{tud@lettering@#1}}{%
%<*class>
    \ClassError{\TUD@Class@Name}%
%</class>
%<*package>
    \PackageError{tudscrmanual}%
%</package>
      {Lettering `\detokenize{#1}' missing}%
      {%
        `\@backslashchar\detokenize{tud@lettering@#1}'\MessageBreak%
        was never defined, possible values as argument are:\MessageBreak%
        \tud@lttr@list%
      }%
  }{%
    \mbox{\csuse{\detokenize{tud@lettering@#1}}}%
  }%
}
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{%
    \let\Lettering\@firstofone%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \Lettering
%
% \begin{macro}{\tud@lettering@TeX}
% \begin{macro}{\tud@lettering@LaTeX}
% \begin{macro}{\tud@lettering@LaTeXe}
% \begin{macro}{\tud@lettering@LaTeX3}
% \begin{macro}{\tud@lettering@pdfLaTeX}
% \begin{macro}{\tud@lettering@LuaLaTeX}
% \begin{macro}{\tud@lettering@XeLaTeX}
% \begin{macro}{\tud@lettering@BibTeX}
% \begin{macro}{\tud@lettering@TeXLive}
% \begin{macro}{\tud@lettering@MacTeX}
% \begin{macro}{\tud@lettering@MiKTeX}
% \begin{macro}{\tud@lettering@LyX}
% \begin{macro}{\tud@lettering@TikZ}
% Hier werden die Schriftzüge definiert, die sich mit \cs{Lettering}\marg{name} 
% ausgeben lassen.
%    \begin{macrocode}
\tud@lttr@define{TeX}{%
  T%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern[-4]{-17}%
    \tud@lttr@shift{40}{E}%
    \tud@lttr@kern[7]{-6}%
  }{%
    \tud@lttr@kern[-5]{-17}%
    \tud@lttr@shift{48}{E}%
    \tud@lttr@kern[2]{-13}%
  }%
  X\@%
}
\tud@lttr@define{LaTeX}{%
  L%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern[9]{-32}\tud@lttr@topscript{T}{A}%
    \tud@lttr@kern[1]{-13}%
  }{%
    \tud@lttr@kern[3]{-33}\tud@lttr@topscript{T}{A}%
    \tud@lttr@kern[-7]{-17}%
  }%
  \Lettering{TeX}%
}
\tud@lttr@define{LaTeXe}{%
  \Lettering{LaTeX}%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern[-2]{8}%
  }{%
    \tud@lttr@kern[-2]{7}%
  }%
  \hbox{%
    \m@th%
    \if b\expandafter\@car\f@series x\@nil\csname boldmath\endcsname\fi%
    2$_{\textstyle\varepsilon}$%
  }\@%
}
\tud@lttr@define{LaTeX3}{%
  \Lettering{LaTeX}%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern[-2]{8}%
  }{%
    \tud@lttr@kern[-2]{7}%
  }%
  3\@%
}
\tud@lttr@define{pdfLaTeX}{%
  pdf%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern{3}%
  }{%
    \tud@lttr@kern[-6]{4}%
  }%
  \Lettering{LaTeX}%
}
\tud@lttr@define{LuaLaTeX}{%
  Lua%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern{-2}%
  }{%
    \tud@lttr@kern[-3]{3}%
  }%
  \Lettering{LaTeX}%
}
\tud@lttr@define{XeLaTeX}{%
  X%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern[-15]{-5}%
    \tud@lttr@shift{40}{\tud@lttr@reflect{E}}%
    \tud@lttr@kern[15]{-12}%
  }{%
    \tud@lttr@kern[-9]{-10}%
    \tud@lttr@shift{48}{\tud@lttr@reflect{E}}%
    \tud@lttr@kern[2]{-10}%
  }%
  \Lettering{LaTeX}%
}
\tud@lttr@define{BibTeX}{%
  B%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern{-5}%
    \tud@lttr@shift{7}{\tud@lttr@topscript{x}{I\tud@lttr@kern{-5}B}}%
    \tud@lttr@kern{-10}%
  }{%
    \tud@lttr@kern{-5}%
    \tud@lttr@shift{-10}{\tud@lttr@topscript{x}{I\tud@lttr@kern[-6]{-3}B}}%
    \tud@lttr@kern[-5]{-7}%
  }%
  \Lettering{TeX}%
}
\tud@lttr@define[TeX Live,TeX~Live]{TeXLive}{%
  \Lettering{TeX}%
  \tud@lttr@kern[-5]{\tud@if@cdfont@activated{20}{15}}Live\@%
}
\tud@lttr@define{MacTeX}{%
  Mac\tud@lttr@kern{-3}\Lettering{TeX}%
}
\tud@lttr@define{MiKTeX}{%
  MiK\tud@lttr@kern{\tud@if@cdfont@activated{6}{-2}}\Lettering{TeX}%
}
\tud@lttr@define{LyX}{%
  L%
  \tud@if@cdfont@activated{%
    \tud@lttr@kern[-3]{-11}%
    \tud@lttr@shift{40}{Y}%
    \tud@lttr@kern[7]{-11}%
  }{%
    \tud@lttr@kern[-9]{-9}%
    \tud@lttr@shift{40}{Y}%
    \tud@lttr@kern[1]{-11}%
  }%
  X\@%
}
\tud@lttr@define{TikZ}{%
  \textnormal{Ti}\textit{k}%
   \tud@if@cdfont@activated{%
    \tud@lttr@kern[5]{-2}%
  }{%
    \tud@lttr@kern[10]{-3}%
  }%
  \textnormal{Z}\@%
}
%    \end{macrocode}
% \end{macro}^^A \tud@lettering@TikZ
% \end{macro}^^A \tud@lettering@LyX
% \end{macro}^^A \tud@lettering@MiKTeX
% \end{macro}^^A \tud@lettering@MacTeX
% \end{macro}^^A \tud@lettering@TeXLive
% \end{macro}^^A \tud@lettering@BibTeX
% \end{macro}^^A \tud@lettering@XeLaTeX
% \end{macro}^^A \tud@lettering@LuaLaTeX
% \end{macro}^^A \tud@lettering@pdfLaTeX
% \end{macro}^^A \tud@lettering@LaTeX3
% \end{macro}^^A \tud@lettering@LaTeXe
% \end{macro}^^A \tud@lettering@LaTeX
% \end{macro}^^A \tud@lettering@TeX
%
% \iffalse
%</body>
%</manual|doc>
% \fi
%
% \PrintBackMatter
%
\endinput
