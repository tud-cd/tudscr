% \iffalse meta-comment
%/GitFileInfo=tudscr-misc.dtx
%
%  TUD-Script -- Corporate Design of Technische Universität Dresden
% ----------------------------------------------------------------------------
%
%  Copyright (C) Falk Hanisch <hanisch.latex@outlook.com>, 2012-2021
%
% ----------------------------------------------------------------------------
%
%  This work may be distributed and/or modified under the conditions of the
%  LaTeX Project Public License, version 1.3c of the license. The latest
%  version of this license is in http://www.latex-project.org/lppl.txt and
%  version 1.3c or later is part of all distributions of LaTeX 2005/12/01
%  or later and of this work. This work has the LPPL maintenance status
%  "author-maintained". The current maintainer and author of this work
%  is Falk Hanisch.
%
% ----------------------------------------------------------------------------
%
%  Dieses Werk darf nach den Bedingungen der LaTeX Project Public Lizenz
%  in der Version 1.3c, verteilt und/oder verändert werden. Die aktuelle
%  Version dieser Lizenz ist http://www.latex-project.org/lppl.txt und
%  Version 1.3c oder später ist Teil aller Verteilungen von LaTeX 2005/12/01
%  oder später und dieses Werks. Dieses Werk hat den LPPL-Verwaltungs-Status
%  "author-maintained", wird somit allein durch den Autor verwaltet. Der
%  aktuelle Verwalter und Autor dieses Werkes ist Falk Hanisch.
%
% ----------------------------------------------------------------------------
%
% \fi
%
% \iffalse ins:batch + dtx:driver
%<*ins>
\ifx\documentclass\undefined
  \input docstrip.tex
  \ifToplevel{\batchinput{tudscr.ins}}
\else
  \let\endbatchfile\relax
\fi
\endbatchfile
%</ins>
%<*dtx>
\ProvidesFile{tudscr-misc.dtx}[2021/03/31]
\RequirePackage{tudscr-gitinfo}
\documentclass[english,ngerman,xindy]{tudscrdoc}
\iftutex
  \usepackage{fontspec}
\else
  \usepackage[T1]{fontenc}
  \usepackage[ngerman=ngerman-x-latest]{hyphsubst}
\fi
\usepackage{babel}
\usepackage{tudscrfonts}
\usepackage{bookmark}
\usepackage[babel]{microtype}

\GitHubBase{\TUDScriptRepository}
\begin{document}
  \maketitle
  \tableofcontents
  \DocInput{\filename}
\end{document}
%</dtx>
% \fi
%
% \selectlanguage{ngerman}
%
% \changes{v2.02}{2014/06/23}{Paket \pkg{titlepage} nicht weiter unterstützt}^^A
% \changes{v2.02}{2014/07/08}{\cs{FamilyKeyState} wird von Optionen genutzt}^^A
%
% \section{Verschiedenes für das \TUDScript-Bundle}
%
% Alles, wofür sich eine separate Datei nicht lohnt, landet hier.
% \ToDo{\cs{PreventPackageFromLoading} Pakete scrpage[2] und scrlettr}[v2.07]
% \ToDo{\opt{mathsubscript=true/false/upright/italic}, siehe vlp}[v2.07]
%^^A  % TODO option
%^^A  % TODO catcodes in marcos für true/false
%^^A  \AtBeginDocument{\catcode`\_=12 \mathcode`\_="8000}
%^^A  \tud@newif\if@mathsub@upright
%^^A    \newcommand*\mathsub@set[1]{%
%^^A      \if@mathsub@upright%
%^^A        \sb{\mathrm{#1}}%
%^^A      \else%
%^^A        \sb{\mathit{#1}}%
%^^A      \fi%
%^^A    }
%^^A    \newcommand*\mathsub@swap{}
%^^A    \def\mathsub@swap|#1|{%
%^^A      \begingroup%
%^^A        \swapuprightsubscripts%
%^^A        \mathsub@set{#1}%
%^^A      \endgroup%
%^^A    }
%^^A  \begingroup
%^^A    \catcode`\_=13
%^^A    \gdef_{\@ifnextchar|\mathsub@swap\mathsub@set}%
%^^A  \endgroup
%^^A  \newcommand*\enableuprightsubscripts{\@mathsub@uprighttrue}
%^^A  \newcommand*\disableuprightsubscripts{\@mathsub@uprightfalse}
%^^A  \newcommand*\swapuprightsubscripts{%
%^^A    \if@mathsub@upright%
%^^A      \@mathsub@uprightfalse%
%^^A    \else%
%^^A      \@mathsub@uprighttrue%
%^^A    \fi%
%^^A  }
%
% \iffalse
%<*!(manual|doc)>
%<*class&option>
% \fi
%
% \subsection{Sprungmarken}
%
% \begin{option}{tudbookmarks}
% \begin{macro}{\if@tud@bookmarks}
% Wird das Paket \pkg{hyperref} geladen, so kann die Option \opt{tudbookmarks}
% genutzt werden, um zu steuern, ob für Titel und Inhaltsverzeichnis
% automatisch ein Eintrag für die Sprungmarken erzeugt werden soll.
%    \begin{macrocode}
\tud@newif\if@tud@bookmarks
\TUD@key{tudbookmarks}[true]{%
  \TUD@set@ifkey{tudbookmarks}{@tud@bookmarks}{#1}%
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@bookmarks
% \end{option}^^A tudbookmarks
%
% \iffalse
%</class&option>
%<*class&body>
% \fi
%
% \begin{macro}{\tudbookmark}
% \begin{macro}{\tud@x@hyperref@realfootnotes}
% Die Befehle zum Eintragen der Sprungmarken. Im Dokument kann \cs{tudbookmark}
% auch vom Anwender genutzt werden, um weitere Lesezeichen abhängig von der
% Option \opt{tudbookmarks} manuell zu erzeugen.
%
% Für die Titelseite werden~-- wie auch durch das Paket \pkg{hyperref}~-- die 
% Fußnoten mit dem Befehl \cs{tud@x@hyperref@realfootnotes} auf den originalen 
% Zustand zurückgesetzt.
% \ToDo{optionales Argument (default=nil) auf integer>0 prüfen}[v2.07]
%    \begin{macrocode}
\newcommand*\tudbookmark[1][]{\@gobbletwo}
\newcommand*\tud@x@hyperref@realfootnotes{}
\AfterPackage{hyperref}{%
  \renewcommand*\tudbookmark[3][]{%
    \relax%
    \if@tud@bookmarks%
      \csuse{phantomsection}%
      \ifblank{#1}{\pdfbookmark{#2}{#3}}{\pdfbookmark[{#1}]{#2}{#3}}%
    \fi%
  }%
  \renewcommand*\tud@x@hyperref@realfootnotes{%
    \let\Hy@saved@footnotemark\@footnotemark%
    \let\Hy@saved@footnotetext\@footnotetext%
    \let\@footnotemark\H@@footnotemark%
    \let\@footnotetext\H@@footnotetext%
  }%
  \pdfstringdefDisableCommands{\let\NoCaseChange\@firstofone}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@x@hyperref@realfootnotes
% \end{macro}^^A \tudbookmark
% \begin{macro}{\tud@x@bookmark@startatroot}
% \changes{v2.05}{2015/08/05}{neu}^^A
% Wird das Paket \pkg{bookmark} geladen, können die erzeugten Outlines gezielt 
% auf der obersten Ebene erzeugt werden.
%    \begin{macrocode}
\newcommand*\tud@x@bookmark@startatroot{\relax}
\AfterPackage{bookmark}{%
  \renewcommand*\tud@x@bookmark@startatroot{%
    \if@tud@bookmarks\bookmarksetup{startatroot}\fi%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@x@bookmark@startatroot
% \begin{environment}{titlepage}
% \changes{v2.05}{2015/08/05}{neu}^^A
% \begin{macro}{\@maketitle}
% \changes{v2.05}{2015/08/05}{neu}^^A
% \begin{macro}{\tud@maketitle@inpage}
% \changes{v2.05}{2015/08/05}{neu}^^A
% Ist die Option \opt{tudbookmarks} aktiviert, werden für Umschlag- und 
% Titelseite PDF"=Lesezeichen bzw. Outline-Einträge erzeugt.
%    \begin{macrocode}
%<*book|report|article>
\apptocmd\titlepage{%
  \tud@x@bookmark@startatroot%
  \@tud@res@swafalse%
  \if@tud@coverpage\@tud@res@swatrue\fi%
  \if@titlepageiscoverpage\@tud@res@swatrue\fi%
  \if@tud@res@swa%
    \tudbookmark[%
%<book|report>    0%
%<article>    1%
    ]{\coverpagename}{cover}%
  \else%
    \tudbookmark[%
%<book|report>    0%
%<article>    1%
    ]{\titlepagename}{title}%
  \fi%
}{}{\tud@patch@wrn{titlepage}}
%</book|report|article>
%    \end{macrocode}
% Dies geschieht außerdem auch für die Titelköpfe.
%    \begin{macrocode}
\pretocmd\tud@maketitle@inpage{%
  \tud@x@bookmark@startatroot%
  \tudbookmark[%
%<book|report>  0%
%<article|poster>  1%
  ]{\titlename}{title}%
}{}{\tud@patch@wrn{tud@maketitle@inpage}}
\pretocmd\@maketitle{%
  \tud@x@bookmark@startatroot%
  \tudbookmark[%
%<book|report>  0%
%<article|poster>  1%
  ]{\titlename}{title}%
}{}{\tud@patch@wrn{@maketitle}}
%    \end{macrocode}
% \end{macro}^^A \tud@maketitle@inpage
% \end{macro}^^A \@maketitle
% \end{environment}^^A titlepage
% \begin{macro}{\tableofcontents}
% \begin{macro}{\listoffigures}
% \begin{macro}{\listoftables}
% Für die Verzeichnisse geschieht dies auch. Für das Inhaltsverzeichnis ist 
% hierfür etwas mehr Aufwand notwendig. Für dieses wird im Normalfall keine 
% PDF-Outline erzeugt. Deshalb ist hier ein wenig Trickserei notwendig, um zwar 
% einen Outline-Eintrag für das Inhaltsverzeichnis zu erzeugen, dieses dabei
% aber nicht in sich selbst einzutragen.
%    \begin{macrocode}
\BeforeTOCHead[toc]{%
  \tud@x@bookmark@startatroot%
  \let\@tempc\relax%
  \Iftocfeature{toc}{totoc}{}{%
    \if@tud@bookmarks%
      \setuptoc{toc}{totoc}%
      \tud@cs@store{addtocontents}%
      \def\@tempc{%
        \unsettoc{toc}{totoc}%
        \tud@cs@restore{addtocontents}%
      }%
      \let\addtocontents\@gobbletwo%
    \fi%
  }%
}
\AfterTOCHead[toc]{\@tempc}
\BeforeTOCHead[lof]{\tud@x@bookmark@startatroot}
\BeforeTOCHead[lot]{\tud@x@bookmark@startatroot}
%    \end{macrocode}
% \end{macro}^^A \listoftables
% \end{macro}^^A \listoffigures
% \end{macro}^^A \tableofcontents
%
% \iffalse
%</class&body>
%<*class&option>
% \fi
%
% \subsection{Fußnoten in Überschriften}
%
% Eigentlich sollte die Option \opt{footnotes}|=|\val{symbolheadings} es 
% ermöglichen, Fußnoten mit Symbolen in Überschriften zu verwenden. Umgesetzt 
% werden sollte dies mit dem Paket \pkg{footmisc}. Da dieses aber mit 
% Inkompatibilitäten zu \pkg{hyperref} und \KOMAScript{} aufwartet, wird darauf 
% leider verzichtet.
%^^A% \begin{option}{footnotes}
%^^A% \changes{v2.02}{2014/06/27}{neu}^^A
%^^A% \begin{macro}{\if@tud@symbolheadings}
%^^A% \changes{v2.02}{2014/06/27}{neu}^^A
%^^A% \begin{macro}{\tud@sec@note}
%^^A% \changes{v2.02}{2014/06/27}{neu}^^A
%^^A% \begin{counter}{symbolheadings}
%^^A% \changes{v2.02}{2014/06/27}{neu}^^A
%^^A% Die \KOMAScript-Option \opt{footnotes} wird um den Schlüssel 
%^^A% \val{symbolheadings} erweitert, mit welchem eingestellt werden kann, ob 
%^^A% in den Überschriften Symbole für die Fußnoten anstelle von Zahlen 
%^^A% verwendet werden sollen.
%^^A%    \begin{macrocode}
%^^A\tud@newif\if@tud@symbolheadings
%^^A\TUD@key{footnotes}{%
%^^A  \TUD@set@numkey{footnotes}{@tempa}{%
%^^A    {nosymbolheadings}{0},{numberheadings}{0},%
%^^A    {symbolheadings}{1}%
%^^A  }{#1}%
%^^A  \ifx\FamilyKeyState\FamilyKeyStateProcessed%
%^^A    \ifcase\@tempa\relax% nosymbolheadings
%^^A      \@tud@symbolheadingsfalse%
%^^A    \or% symbolheadings
%^^A      \@tud@symbolheadingstrue%
%^^A    \fi%
%^^A  \fi%
%^^A}
%^^A%    \end{macrocode}
%^^A% Mit \cs{tud@sec@note} wird die Option \opt{footnotes=symbolheadings} 
%^^A% umgesetzt. Hierfür wird das Paket \pkg{footmisc} benötigt.
%^^A%    \begin{macrocode}
%^^A\newcommand*\tud@sec@note[1]{%
%^^A  \ClassWarning{\TUD@Class@Name}{%
%^^A    You have to load package `footmisc' with\MessageBreak%
%^^A    option `stable' in order to use\MessageBreak%
%^^A    footnotes with symbols in headings%
%^^A  }%
%^^A}
%^^A\AfterPackage{footmisc}{%
%^^A  \@ifpackagewith{footmisc}{stable}{%
%^^A    \renewcommand*\tud@sec@note[1]{%
%^^A      \begingroup%
%^^A        \if@tud@symbolheadings%
%^^A          \let\c@footnote\c@symbolheadings%
%^^A          \def\thefootnote{\fnsymbol{symbolheadings}}%
%^^A        \fi%
%^^A        \footnote{#1}%
%^^A      \endgroup%
%^^A    }%
%^^A  }{}%
%^^A}
%^^A%    \end{macrocode}
%^^A% Bei aktivierter Option \opt{footnotes}|=|\val{symbolheadings} wird  
%^^A% dieser Zähler für die Symboleauswahl von Fußnoten in Überschirften 
%^^A% inkrementiert.
%^^A%    \begin{macrocode}
%^^A\AtEndOfClass{%
%^^A%<book|report>  \newcounter{symbolheadings}[chapter]
%^^A%<article|poster>  \newcounter{symbolheadings}
%^^A}
%^^A%    \end{macrocode}
%^^A% \end{counter}^^A symbolheadings
%^^A% \end{macro}^^A \tud@sec@note
%^^A% \end{macro}^^A \if@tud@symbolheadings
%^^A% \end{option}^^A footnotes
%
% \subsection{Papierformat und Schriftgröße}
%
% Insbesondere für Poster aber auch für alle anderen \TUDScript-Klassen wird
% überprüft, ob nach einer Änderung des Standardpapierformates auch die
% Schriftgröße durch den Anwender angepasst wurde. Diese wird jedoch nicht auf
% Plausibilität geprüft, da der Aufwand hierfür relativ hoch wäre. Vielmehr 
% wird davon ausgegangen, dass die explizite Angabe der Schriftgröße bewusst 
% und dem Papierformat sowie den verwendeten Textspalten entsprechend erfolgt.
%
% \begin{macro}{\tud@x@scr@checkoptions}
% \changes{v2.06}{2018/07/31}{neu}^^A
% \begin{macro}{\tud@x@scr@pt}
% \changes{v2.06}{2018/07/31}{neu}^^A
% Das Makro \cs{tud@x@scr@checkoptions} wird mit \cs{DeclareOption*} für alle 
% Optionen aufgerufen, welche kein Mitglied der Familie~\val{TUD} sind. Damit 
% kann auf nicht definierte Schlüssel reagiert werden. Anschließend werden diese
% an die zugrundeliegende \KOMAScript-Klasse weitergereicht.
%    \begin{macrocode}
\newcommand*\tud@x@scr@checkoptions{%
  \expandafter\tud@x@scr@pt\CurrentOption pt\@nil%
  \expandafter\PassOptionsToClass\expandafter{\CurrentOption}{\TUD@Class@KOMA}%
}
%    \end{macrocode}
% Wird die Schriftgröße im veralteten Format \val{\dots pt} als Option
% übergeben, so wird der Schalter \cs{if@tud@x@scr@fontsize@set} auf \val{true} 
% gesetzt.
%    \begin{macrocode}
\newcommand*\tud@x@scr@pt{}
\def\tud@x@scr@pt #1pt#2\@nil{%
  \Ifstr{#2}{pt}{\Ifnumber{#1}{\@tud@x@scr@fontsize@settrue}{}}{}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@x@scr@pt
% \end{macro}^^A \tud@x@scr@checkoptions
%
% \iffalse
%</class&option>
%<*class&body>
% \fi
%
% Wurde das Papierformat jedoch nicht die Schriftgröße geändert, wird eine
% Warnung erzeugt.
%    \begin{macrocode}
\AtBeginDocument{%
  \if@tud@x@scr@fontsize@set\else%
    \@tud@res@swafalse%
    \ifdim\tud@dim@layoutwidth<208mm\relax\@tud@res@swatrue\fi%
    \ifdim\tud@dim@layoutwidth>212mm\relax\@tud@res@swatrue\fi%
    \ifdim\tud@dim@layoutheight<295mm\relax\@tud@res@swatrue\fi%
    \ifdim\tud@dim@layoutheight>299mm\relax\@tud@res@swatrue\fi%
    \if@tud@res@swa%
      \ClassWarningNoLine{\TUD@Class@Name}{%
        You've set a layout size, which is different from\MessageBreak%
        default (paper=a4, paper=portrait). Therefore you\MessageBreak%
        should explicitly specify an font size. See the\MessageBreak%
        manual for further information%
      }%
    \fi%
  \fi%
}
%    \end{macrocode}
%
% \subsection{Fixierte Gleitobjekte für Poster}
%
% \begin{environment}{figurehere}
% \changes{v2.05}{2016/04/17}{neu}^^A
% \changes{v2.07}{2019/09/10}{für \cls{tudscrposter} übernommen}^^A
% \begin{environment}{tablehere}
% \changes{v2.05}{2016/04/17}{neu}^^A
% \changes{v2.07}{2019/09/10}{für \cls{tudscrposter} übernommen}^^A
% \begin{macro}{\tud@here@begin}
% \changes{v2.07}{2019/09/10}{neu}^^A
% \begin{macro}{\tud@here@end}
% \changes{v2.07}{2019/09/10}{neu}^^A
% Für die Klasse \cls{tudscrposter} werden zwei Umgebungen bereitgestellt, mit 
% denen sich Tabellen und Bilder an einer bestimmten Stelle exakt platzieren
% lassen. Prinzipiell könnte hierfür auch das Paket \pkg{float} zum Einsatz
% kommen.
%    \begin{macrocode}
%<*poster>
\newcommand*\tud@here@begin[1]{%
  \def\@captype{#1}%
  \vskip\intextsep%
  \color@vbox%
    \normalcolor%
    \vbox\bgroup%
      \hsize=\columnwidth%
      \@parboxrestore%
      \@floatboxreset%
      \@setnobreak%
      \ignorespaces%
}
\newcommand*\tud@here@end{%
      \vskip\intextsep%
      \@minipagefalse%
      \outer@nobreak%
    \egroup%
  \color@endbox%
}
\newenvironment{figurehere}{\tud@here@begin{figure}}{\tud@here@end}
\newenvironment{tablehere}{\tud@here@begin{table}}{\tud@here@end}
%</poster>
%    \end{macrocode}
% \end{macro}^^A \tud@here@end
% \end{macro}^^A \tud@here@begin
% \end{environment}^^A tablehere
% \end{environment}^^A figurehere
%
% \iffalse
%</class&body>
%<*body>
% \fi
%
% \subsection{Anpassungen für das Paket \pkg{textcase}}
%
% \begin{macro}{\@uclcnotmath}
% \begin{macro}{\tud@x@textcase@uclcnotmath}
% \changes{v2.02}{2014/06/27}{\pkg{textcase}: Ignorieren von Fußnoten im 
%   Argument des Befehls \cs{MakeTextUppercase}}^^A
% \changes{v2.03}{2015/01/21}{\pkg{textcase}: Ignorieren des Befehls 
%   \cs{@mkboth} im Argument des Befehls \cs{MakeTextUppercase}}^^A
% Damit Fußnoten innerhalb von \cs{MakeTextUppercase} nicht in Majuskeln
% gesetzt werden, wird der interne Befehl \cs{@uclcnotmath} aus dem Paket
% \pkg{textcase} angepasst.
%    \begin{macrocode}
\if@tud@cdoldfont@active
  \AtEndPreamble{\RequirePackage{textcase}[2019/09/14]}%
\fi
\AfterPackage*{textcase}{%
  \newcommand*\tud@x@textcase@uclcnotmath{%
    \@nonchangecase\thanks%
    \def\footnote##1##{\toks@{\noexpand\footnote##1}\@footnote}%
    \def\@footnote##1{\NoCaseChange{\the\toks@{##1}}}%
    \def\@mkboth##1##2{\NoCaseChange{\@mkboth{##1}{##2}}}%
  }%
  \robustify\NoCaseChange%
  \patchcmd\@uclcnotmath{%
    \@nonchangecase\ensuremath%
  }{%
    \@nonchangecase\ensuremath%
    \tud@x@textcase@uclcnotmath%
  }{}{\tud@patch@wrn{@uclcnotmath}}%
}
\TUD@deprecated@cs{NoCaseChange}{@firstofone}
%    \end{macrocode}
% \end{macro}^^A \tud@x@textcase@uclcnotmath
% \end{macro}^^A \@uclcnotmath
%
% \iffalse
%</body>
%<*option>
% \fi
%
% \section{Verarbeitung von Optionen}
% \subsection{Sukkzessives Abarbeiten von Optionen im Dokument}
%
% Werden mit \cs{TUDoptions} nach \cs{begin\{document\}} mehrere Layoutoptionen 
% gleichzeitig angegeben, muss dafür Sorge getragen werden, dass diese in der 
% korrekten Reihenfolge abgearbeitet werden. 
%
% Das Makro \cs{TUD@SpecialOptionAtDocument} kann innerhalb von \cs{TUD@key} 
% verwendet werden, um einen im obligatorischen Argument angegebenen Schalter 
% zu aktivieren. Dabei wird über \cs{tud@atdocument@hook} garantiert, dass der 
% Befehl \cs{tud@atdocument@process}, welcher für die Abarbeitung der einzelnen 
% Makros in der richtigen Reihenfolge verantwortlich ist, lediglich einmal über 
% \cs{AtEndOfFamilyOptions*} ausgeführt wird.
%
% \begin{macro}{\TUD@SpecialOptionAtDocument}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\tud@atdocument@hook}
% \changes{v2.05}{2016/06/14}{neu}^^A
%    \begin{macrocode}
\newcommand*\tud@atdocument@hook{}
\let\tud@atdocument@hook\relax
\newcommand*\TUD@SpecialOptionAtDocument[1]{}
\AfterEndPreamble{%
  \renewcommand*\TUD@SpecialOptionAtDocument[1]{%
    \ifx\tud@atdocument@hook\relax%
      \gdef\tud@atdocument@hook{\global\let\tud@atdocument@hook\relax}%
      \AtEndOfFamilyOptions*{%
        \tud@atdocument@hook%
        \tud@atdocument@process%
      }%
    \fi%
    \gappto\tud@atdocument@hook{\global\booltrue{@#1}}%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@atdocument@hook
% \end{macro}^^A \TUD@SpecialOptionAtDocument
%
% \iffalse
%</option>
%<*body>
% \fi
%
% \begin{macro}{\tud@atdocument@process}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@font@set}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@math@set}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@relspacing@set}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@x@scr@headings@reset}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@cd@process}
% \changes{v2.05}{2016/06/14}{neu}^^A
% \begin{macro}{\if@tud@cdgeometry@process}
% \changes{v2.05}{2016/06/14}{neu}^^A
% Das Makro \cs{tud@atdocument@process} wird im Dokument ausgeführt, wenn 
% mindestens eine Option gesetzt wurde, welche \cs{TUD@SpecialOptionAtDocument} 
% verwendet. Je nachdem, welche Schalter insgesamt aktiviert wurden, werden die 
% dazugehörigen Befehle für die Einstellungen von Schriften, Layout und/oder 
% Satzspiegel in der richtigen Reihenfolge ausgeführt.
%    \begin{macrocode}
\tud@newif\if@tud@font@set
\tud@newif\if@tud@math@set
\tud@newif\if@tud@relspacing@set
%<*class>
\tud@newif\if@tud@x@scr@headings@reset
\tud@newif\if@tud@cd@process
\tud@newif\if@tud@cdgeometry@process
%</class>
\newcommand*\tud@atdocument@process{%
  \if@tud@font@set%
    \tud@font@set%
    \global\@tud@font@setfalse%
    \global\@tud@relspacing@setfalse%
%<class>    \global\@tud@cd@processfalse%
  \fi%
  \if@tud@relspacing@set%
    \tud@relspacing@set%
    \global\@tud@relspacing@setfalse%
  \fi%
  \if@tud@math@set%
    \tud@math@set%
    \global\@tud@math@setfalse%
  \fi%
%<*class>
  \if@tud@x@scr@headings@reset%
    \tud@x@scr@headings@reset%
    \global\@tud@x@scr@headings@resetfalse%
    \global\@tud@cd@processfalse%
  \fi%
  \if@tud@cd@process%
    \tud@cd@process%
    \global\@tud@cd@processfalse%
  \fi%
  \if@tud@cdgeometry@process%
    \tud@cdgeometry@process%
    \global\@tud@cdgeometry@processfalse%
  \fi%
%</class>
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@cdgeometry@process
% \end{macro}^^A \if@tud@cd@process
% \end{macro}^^A \if@tud@x@scr@headings@reset
% \end{macro}^^A \if@tud@relspacing@set
% \end{macro}^^A \if@tud@math@set
% \end{macro}^^A \if@tud@font@set
% \end{macro}^^A \tud@atdocument@process
%
% \iffalse
%</body>
%</!(manual|doc)>
%<*execute>
%<*class&!inherit|package&fonts>
% \fi
%
% \subsection{Versionsabhängige Voreinstellungen}
%
% Voreinstellungen von neu eingeführten Optionen, welche die resultierende 
% Ausgabe entscheidend verändern könnten, werden hier versionsabhängig gesetzt.
% Hierfür wird der Schlüssel \opt{tudscrver} des Mitglieds \val{.comp} vor 
% allen anderen Schlüsseln ausgewertet. Danach kann mit \cs{tud@if@v@lower} auf 
% die gewählte Kompatibilitäsversion getestet werden.
%    \begin{macrocode}
\DeclareOption*{}
\TUDProcessOptions[.comp]\relax
%    \end{macrocode}
% Ab der \TUDScript-Version~v2.05 werden einige vertikale Abstände abhängig von 
% der Schriftgröße definiert. Sollte eine frühere Kompatibilitätseinstellung 
% angegeben worden sein, wird dieses verhalten deaktiviert.
%    \begin{macrocode}
\tud@if@v@lower{2.05}{%
  \TUD@key@preset{relspacing}{false}%
}{%
  \TUD@key@preset{relspacing}{true}%
}
%    \end{macrocode}
% Ab \TUDScript-Version~v2.06 werden die verwendeten Schriften auf \OpenSans 
% gesetzt, für die Komptibilität zu vorherigen Versionen auf \Univers und \DIN.
%    \begin{macrocode}
\tud@if@v@lower{2.06}{%
%<!(class&poster)>  \TUD@key@preset{cdoldfont}{true}%
%<class&poster>  \TUD@key@preset{cdoldfont}{ultrabold}%
  \TUD@key@preset{ttfont}{lmodern}%
%<class>  \TUD@key@preset{headings}{light}%
}{%
%<!(class&poster)>  \TUD@key@preset{cdfont}{true}%
%<class&poster>  \TUD@key@preset{cdfont}{ultrabold}%
  \TUD@key@preset{ttfont}{roboto}%
%<class>  \TUD@key@preset{headings}{heavy}%
}
%    \end{macrocode}
%
% \iffalse
%</class&!inherit|package&fonts>
% \fi
%
% Es werden die Standardoptionen ausgeführt. Für die Klasse \cls{tudscrposter} 
% werden die Farben aktiviert.
%    \begin{macrocode}
%<*package&tutorial>
\KOMAoptions{headings=small}
\TUDoptions{cdfoot=true}
%</package&tutorial>
%<*class&!inherit|package&fixfonts>
\TUDExecuteOptions{%
%<*package&fixfonts>
  headings=heavy%
%</package&fixfonts>
%<*class&!inherit>
%<*book|report|article>
  cd=true,tudbookmarks=true%
%</book|report|article>
%<*poster>
  cd=bicolor,tudbookmarks=false%
%</poster>
%</class&!inherit>
}
%</class&!inherit|package&fixfonts>
%    \end{macrocode}
%
% \subsection{Durchreichen von Optionen und Standardoptionen}
%
% Durchreichen aller Klassenoptionen an die \KOMAScript-Klasse bzw. an die
% genutzte \TUDScript-Elternklasse. Für Klassen wird vor dem Durchreichen noch 
% geprüft, ob ein spezielles Papierformat angegeben wurde.
%    \begin{macrocode}
%<*package>
%<*fonts>
\DeclareOption*{\expandafter\TUD@KOMAoptions\expandafter{\CurrentOption}}
%</fonts>
%<*fixfonts>
\DeclareOption*{%
  \expandafter\PassOptionsToPackage\expandafter{\CurrentOption}%
  {tudscrfonts}%
}
%</fixfonts>
%<*comp>
\DeclareOption*{\expandafter\TUDoptions\expandafter{\CurrentOption}}
%</comp>
%</package>
%<*class>
%<*!inherit>
\DeclareOption*{\tud@x@scr@checkoptions}
%</!inherit>
%<*inherit>
\DeclareOption*{%
  \expandafter\PassOptionsToClass\expandafter{\CurrentOption}%
  {\TUD@Class@Parent}%
}
%</inherit>
%</class>
%    \end{macrocode}
% Nach der Auswerung der Optionen wird die korrespondierende \KOMAScript-Klasse 
% bzw. \TUDScript-Elternklasse geladen.
%    \begin{macrocode}
\TUDProcessOptions\relax
%<*class&!inherit>
\LoadClass{\TUD@Class@KOMA}[%
%!TUD@KOMAVersion
]
%</class&!inherit>
%<*class&inherit>
\LoadClass{\TUD@Class@Parent}[%
%!TUD@Version
]
%</class&inherit>
%    \end{macrocode}
%
% \iffalse
%<*class&!inherit|package&fonts>
% \fi
%
% \subsection{Optionen ohne späte Wahlmöglichkeit}
%
% Einige Optionen können nur zum Zeitpunkt des Ladens einer Klasse oder eines 
% Paketes respektive in der Präambel gesetzt werden. Diese müssen \emph{nach}
% \cs{TUDProcessOptions} mit \cs{TUD@key@toolate} redefiniert werden.
%
% \begin{macro}{\TUD@key@toolate}
% \changes{v2.06c}{2019/08/20}{neu}^^A
% Dieser Befehl definiert eine Fehlermeldung für Schlüssel respektive Optionen, 
% die zu spät verwendet wurden, wobei er innerhalb der Makros \cs{AtEndOfClass},
% oder \cs{AtEndOfClass} respektive \cs{AtEndPreamble} genutzt werden sollte.
% Wird dieser im Kontext von Klasse oder Paket (|\@currname.\@currext-h@@k|) 
% verwendet, wird gemeldet, dass der Schlüssel allein beim Laden der Klasse 
% respektive des Paketes genutzt werden darf. Andernfalls wird die zwingende
% Verwendung in der Präambel angemerkt.
% \ToDo{in tudscrbase}[v2.07]
%    \begin{macrocode}
\newcommand*\TUD@key@toolate[1]{%
  \csedef{tud@key@toolate@@#1}{%
%<*class>
    \noexpand\ClassError{\noexpand\TUD@Class@Name}%
%</class>
%<*package&fonts>
    \noexpand\PackageError{tudscrfonts}%
%</package&fonts>
    {Option `#1' too late}{%
      Option `#1' can only be set\space%
      \ifcsdef{\@currname.\@currext-h@@k}{%
        as optional \MessageBreak argument while loading\space%
%<*class>
        class `\noexpand\TUD@Class@Name'%
%</class>
%<*package&fonts>
        package `tudscrfonts'%
%</package&fonts>
      }{%
        in the preamble%
      }%
      \MessageBreak but you have tried to set it up later.%
    }%
  }%
  \TUD@key[]{#1}[]%
  {%
    \csuse{tud@key@toolate@@#1}%
    \FamilyKeyStateProcessed%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \TUD@key@toolate
%
% \iffalse
%</class&!inherit|package&fonts>
%</execute>
%<*manual|doc>
% \fi
%
% \section{Zusätzliches für die Benutzer- und Quelltextdokumentation}
%
% Hier tauchen Hilfsmittel auf, die für die Dokumentation verwendet werden.
%
% \iffalse
%<*option>
% \fi
%
% \subsection{Zusätzliche Pakete}
%
% Bugfixes für unterschiedliche Pakete.
%    \begin{macrocode}
\RequirePackage{scrhack}[%
%!TUD@KOMAVersion
]
%    \end{macrocode}
% Das Paket für intelligente Leerzeichen am Ende von Makros mit \cs{xspace}.
%    \begin{macrocode}
\RequirePackage{xspace}[2014/10/28]
\xspaceaddexceptions{"=}
%    \end{macrocode}
% Das Paket \pkg{marginnote} stellt nicht fließenden Randnotizen bereit, welche 
% für die Kennzeichnung von Änderungen, Hinweise oder ToDo-Notizen verwendet 
% werden. Die Randnotizen werden auf dem linken~-- weil größeren~-- Seitenrand
% gesetzt.
%    \begin{macrocode}
\PassOptionsToPackage{quiet}{marginnote}
\RequirePackage{marginnote}[2018/08/09]
%<!doc>\reversemarginpar
%    \end{macrocode}
% Das Paket \pkg{shellesc} ermöglicht mit dem Befehl \cs{ShellEscape} die 
% Verwendung von Systembefehlen auf der Kommandozeile unabhängig vom genutzten
% Format. Sollte \app{lualatex} als Dokumentprozessor eingesetzt werden, sind 
% dennoch die beiden \app{pdflatex}-Primitiven \cs{pdf(@)strcmp} und 
% \cs{pdf(@)shellescape} nötig, wofür das Paket \pkg{pdftexcmds} geladen wird.
%    \begin{macrocode}
\RequirePackage{shellesc}[2019/11/08]
\RequirePackage{pdftexcmds}[2020/06/27]
%    \end{macrocode}
% Kleinkram für \pkg{hyperref}
% \begin{macro}{\hrfn}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \changes{v2.04}{2015/02/18}{Schriftgröße mit \cs{scalebox}}^^A
% Mit diesem Makro können Hyperlinks im Fließtext erzeugt werden, welche 
% zusätzlich noch die dazugeörige URL als Fußnote anzeigen.
%    \begin{macrocode}
\newcommand*\hrfn[2]{\href{#1}{\trim@spaces{#2}}\footnote{\url{#1}}}
%    \end{macrocode}
% \end{macro}^^A \hrfn
% \begin{macro}{\mailto}
% Ein Makro zur Angabe einer verlinkten E"~Mail-Adresse.
%    \begin{macrocode}
\newrobustcmd*\mailto[1]{\mbox{\href{mailto:#1}{\nolinkurl{#1}}}}%
%    \end{macrocode}
% \end{macro}^^A \mailto
% \begin{macro}{\href}
% \begin{macro}{\url}
% \begin{macro}{\nolinkurl}
% Sollte \pkg{hyperref} nicht geladen werden, müssen einige Befehle rudimentär 
% definiert werden.
%    \begin{macrocode}
\TUD@UnwindPackage{hyperref}{%
  \RequirePackage{url}[2013/09/16]%
  \providerobustcmd*\url[1]{\texttt{\detokenize{#1}}}%
  \providerobustcmd*\nolinkurl[1]{\url{#1}}%
  \providerobustcmd*\href[3][]{#3}%
}
%    \end{macrocode}
% \end{macro}^^A \nolinkurl
% \end{macro}^^A \url
% \end{macro}^^A \href
%
% Etwas Kleinkram für \pkg{babel} und \pkg{csquotes}.
%    \begin{macrocode}
\AfterPackage*{babel}{\RequirePackage{csquotes}}
%    \end{macrocode}
% \begin{macro}{\selectlanguage}
% \begin{macro}{\glqq}
% \begin{macro}{\grqq}
% \begin{macro}{\enquote}
%    \begin{macrocode}
\TUD@UnwindPackage{babel}{%
  \ClassWarningNoLine{\TUD@Class@Name}{Package `babel' not loaded}%
  \providecommand*\glqq{\quotedblbase}%
  \providecommand*\grqq{\textquotedblleft}%
  \providecommand*\seename{siehe}%
  \providecommand*\alsoname{siehe\nobreakspace auch}%
}
\TUD@UnwindPackage{csquotes}{%
  \ClassWarningNoLine{\TUD@Class@Name}{Package `csquotes' not loaded}%
  \providecommand\enquote[1]{\emph{#1}}%
}
%    \end{macrocode}
% \end{macro}^^A \enquote
% \end{macro}^^A \grqq
% \end{macro}^^A \glqq
% \end{macro}^^A \selectlanguage
%
% \iffalse
%<*manual>
% \fi
%
% \subsection{Verarbeitung von Listen}
%
% \begin{macro}{\tud@unique@add}
% \changes{v2.07}{2021/06/08}{neu}^^A
% \begin{macro}{\tud@unique@eadd}
% \changes{v2.07}{2021/06/08}{neu}^^A
% \begin{macro}{\tud@unique@xadd}
% \changes{v2.07}{2021/06/08}{neu}^^A
% \begin{macro}{\tud@unique@csxadd}
% \changes{v2.07}{2021/06/08}{neu}^^A
% \begin{macro}{\listeremove}
% \changes{v2.07}{2021/06/08}{neu}^^A
% Ein wenig syntaktischer Zucker für Listen ohne Duplikate.
%    \begin{macrocode}
\newcommand*\tud@unique@add[2]{%
  \ifinlist{#2}{#1}{}{\listadd#1{#2}}%
}
\newcommand*\tud@unique@eadd[2]{%
  \xifinlist{#2}{#1}{}{\listeadd#1{#2}}%
}
\newcommand*\tud@unique@xadd[2]{%
  \xifinlist{#2}{#1}{}{\listxadd#1{#2}}%
}
\newcommand*\tud@unique@csxadd[2]{%
  \xifinlistcs{#2}{#1}{}{\listcsxadd{#1}{#2}}%
}
\providerobustcmd*\listeremove[2]{%
  \begingroup%
    \edef\etb@tempa{\endgroup\unexpanded{\listremove#1}{#2}}%
  \etb@tempa%
}
%    \end{macrocode}
% \end{macro}^^A \listeremove
% \end{macro}^^A \tud@unique@csxadd
% \end{macro}^^A \tud@unique@xadd
% \end{macro}^^A \tud@unique@eadd
% \end{macro}^^A \tud@unique@add
%
% \subsubsection{Externe Hilfslisten}
%
% \begin{macro}{\tud@auxlist@register}
% \changes{v2.07}{2019/11/08}{neu}^^A
% Hiermit wird eine Hilfsliste initialisiert und die Befehle ausgeführt, um 
% diese am Ende des Dokumentes in die aux"~Datei schreiben und im nachfolgenden 
% Durchlauf wieder einlesen und verarbeiten zu können.
%
% Das obligatorische Argument enthält den Namen der Liste. Das vorherige 
% optionale Argument wird bei der Verarbeitung auf jedes Listenelement 
% angewendet, bevor es zur Liste hinzugefügt oder mit dieser verglichen wird.
% Die Sternversion führt nach dem Einlesen der Liste die enthaltenen Elemente 
% einzeln aus.
%
% Dabei werden drei Makros verwendet. Der Befehl \cs{\meta{listname}@auxlist} 
% enthält die importierte Liste. In \cs{\meta{listname}@auxlist@positive} 
% werden alle potentiellen Einträge in einer Positivliste vorgehalten, die 
% exportiert werden sollen. Da im Verlauf des Dokumentes allerdings bestimmte
% Elemente wieder entfernt werden könnten, wird die Negativliste für diese 
% genutzt. Dieses Konstrukt dient dazu, dass beim Kompilieren des Dokumentes 
% möglicherweise Elemente auftreten, die gar nicht exportiert werden sollen, 
% obwohl diese später der Positivliste hinzugefügt werden könnten.
%    \begin{macrocode}
\NewDocumentCommand\tud@auxlist@register{s D(){\@firstofone} m}{%
  \expandafter\newcommand\expandafter*\csname#3@auxlist\endcsname{}%
  \expandafter\newcommand\expandafter*\csname#3@auxlist@positive\endcsname{}%
  \expandafter\newcommand\expandafter*\csname#3@auxlist@negative\endcsname{}%
  \expandafter\newcommand\expandafter*\csname#3@auxlist@handler\endcsname{#2}%
  \BeforeClosingMainAux{%
    \forlistcsloop{\listcsremove{#3@auxlist@positive}}{#3@auxlist@negative}%
    \tud@auxlist@export{#3}%
  }%
  \AtBeginDocument{\tud@auxlist@import{#3}{#1}}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@auxlist@register
%
% \begin{macro}{\tud@auxlist@export}
% \changes{v2.07}{2019/11/08}{neu}^^A
% \begin{macro}{\tud@auxlist@import}
% \changes{v2.07}{2019/11/08}{neu}^^A
% Beim Schreiben in die aux"~Datei wird die \pkg{etoolbox}"~Liste in eine 
% Token-Liste umgewandelt.
%    \begin{macrocode}
\newcommand*\tud@auxlist@export[1]{%
  \if@filesw%
    \let\tud@res@a\@empty%
    \def\tud@res@b##1{\eappto\tud@res@a{\@percentchar^^J\@spaces{##1}}}%
    \forlistcsloop\tud@res@b{#1@auxlist@positive}%
    \immediate\write\@mainaux{%
      \string\gdef\expandafter\string\csname #1@auxlist\endcsname%
        {\expandonce\tud@res@a\@percentchar^^J}%
    }%
  \fi%
}
%    \end{macrocode}
% Beim Lesen wird die Token-Liste zurück in eine \pkg{etoolbox}"~Liste 
% gewandelt.
%    \begin{macrocode}
\newcommand*\tud@auxlist@import[2]{%
  \begingroup%
    \edef\tud@res@a{\unexpanded{\@tfor\tud@res@c:=}\csexpandonce{#1@auxlist}}%
    \letcs\tud@res@b{#1@auxlist@handler}%
    \global\cslet{#1@auxlist}\@empty%
    \tud@res@a\do{%
      \edef\tud@res@c{\tud@res@b{\tud@res@c}}%
      \listcsxadd{#1@auxlist}{\expandonce\tud@res@c}%
    }%
  \endgroup%
  \IfBooleanT{#2}{\forlistcsloop{\@firstofone}{#1@auxlist}}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@auxlist@import
% \end{macro}^^A \tud@auxlist@export
%
% \begin{macro}{\tud@auxlist@add}
% \changes{v2.07}{2019/11/08}{neu}^^A
% \begin{macro}{\tud@auxlist@remove}
% \changes{v2.07}{2019/11/08}{neu}^^A
% \begin{macro}{\tud@auxlist@ifin}
% \changes{v2.07}{2019/11/08}{neu}^^A
% Befehle für das Hinzufügen, Entfernen und Prüfen von Elementen in den Listen.
%    \begin{macrocode}
\newcommand*\tud@auxlist@add[2]{%
  \begingroup%
    \protected@edef\tud@res@a{#2}%
    \edef\tud@res@a{\detokenize\expandafter{\tud@res@a}}%
    \tud@unique@csxadd{#1@auxlist@positive}{\tud@res@a}%
  \endgroup%
}
\newcommand*\tud@auxlist@remove[2]{%
  \begingroup%
    \protected@edef\tud@res@a{#2}%
    \edef\tud@res@a{\detokenize\expandafter{\tud@res@a}}%
    \tud@unique@csxadd{#1@auxlist@negative}{\tud@res@a}%
  \endgroup%
}
\newcommand*\tud@auxlist@ifin[2]{%
  \begingroup%
    \protected@edef\tud@res@a{#1}%
    \letcs\tud@res@b{#2@auxlist@handler}%
    \edef\tud@res@a{%
      \endgroup%
      \noexpand\ifinlistcs{\tud@res@b{\tud@res@a}}{#2@auxlist}%
    }%
  \tud@res@a%
}
%    \end{macrocode}
% \end{macro}^^A \tud@auxlist@ifin
% \end{macro}^^A \tud@auxlist@remove
% \end{macro}^^A \tud@auxlist@add
%
% \subsubsection{Sortieren von Listen}
%
% \begin{macro}{\tud@list@sort}
% \changes{v2.02}{2014/07/25}{neu}^^A
% \changes{v2.07}{2019/09/20}{Hilfskonstrukt kommaseparierte Liste entfernt}^^A
% \begin{macro}{\tud@list@@sort}
% \changes{v2.02}{2014/07/25}{neu}^^A
% \begin{macro}{\tud@list@@@sort}
% \changes{v2.07}{2019/09/20}{neu}^^A
% \begin{macro}{\tud@list@sorted}
% \changes{v2.02}{2014/07/25}{neu}^^A
% \begin{macro}{\if@tud@list@sorted}
% \changes{v2.02}{2014/07/25}{neu}^^A
% Der Befehl \cs{tud@list@sort} erwartet eine \pkg{etoolbox}-Liste und sortiert 
% diese mit dem Makro \cs{sort@list} in alphabetischer Reihenfolge.
%    \begin{macrocode}
\tud@newif\if@tud@list@sorted
\newcommand*\tud@list@sorted{}
\newcommand*\tud@list@sort[1]{%
  \ifdefvoid{#1}{%
    \ClassWarning{\TUD@Class@Name}{%
      The given list \string#1\space\MessageBreak%
      is empty, nothing to sort here%
    }%
  }{%
    \begingroup%
      \let\tud@list@sorted\@empty%
      \forlistloop\tud@list@@sort{#1}%
      \edef\tud@res@c{%
        \endgroup%
        \unexpanded{\def#1}{\expandonce\tud@list@sorted}%
      }%
    \tud@res@c%
  }%
}
%    \end{macrocode}
% Hier erfolgt die eigentliche Sortierung der Liste.
%    \begin{macrocode}
\newcommand*\tud@list@@sort[1]{%
%    \end{macrocode}
% Die Einräge werden mit \cs{pdfstrcmp} an der richtigen Stelle eingefügt.
% Dabei wird die temporäre Liste \cs{tud@list@sorted} durchlaufen und
% \cs{tud@res@a} als Hilfsmakro verwendet, in welches die aktuelle Liste
% innerhalb der \cs{@forlistloop}-Schleife stückweise expandiert wird. Wenn das
% aktuelle Element an der dafür passenden Stelle eingesetzt wurde, wird
% \cs{if@tud@list@sorted} gesetzt und der restliche Teil von 
% \cs{tud@list@sorted} an \cs{tud@res@a} angehängt.
%    \begin{macrocode}
  \@tud@list@sortedfalse%
  \let\tud@res@a\@empty%
  \forlistloop{\tud@list@@@sort\tud@res@a{#1}}{\tud@list@sorted}%
%    \end{macrocode}
% Wurde der Eintrag nach dem Durchlaufen der Liste nicht eingefügt, so erfolgt 
% dies hier am Ende der Liste.
%    \begin{macrocode}
  \if@tud@list@sorted\else%
    \listadd\tud@res@a{#1}%
  \fi%
%    \end{macrocode}
% Die temporäre Liste \cs{tud@res@a} wird in \cs{tud@list@sorted} geschrieben.
%    \begin{macrocode}
  \let\tud@list@sorted\tud@res@a%
}
%    \end{macrocode}
% Das Makro für die eigentliche Sortierung.
%    \begin{macrocode}
\newcommand*\tud@list@@@sort[3]{%
%    \end{macrocode}
% Ist der Eintrag bereits erfolgt, wird der verbliebene Teil der Liste 
% angehangen.
%    \begin{macrocode}
  \if@tud@list@sorted%
    \listadd#1{#3}%
  \else%
%    \end{macrocode}
% Liegt der Eintrag in alphabetischer Reihenfolge vor dem aktuellen der 
% durchlaufenenen Liste, so wird dieser davor eingefügt. Anschließend wird 
% \cs{@tud@list@sortedtrue} gesetzt.
%    \begin{macrocode}
    \ifnum\pdf@strcmp{#2}{#3}<\z@\relax%
      \listadd#1{#2}%
      \listadd#1{#3}%
      \@tud@list@sortedtrue%
    \else%
%    \end{macrocode}
% Ist Eintrag in alphabetischer Reihenfolge nach dem aktuellen der geprüften 
% Liste, so wird dieser (noch) nicht eingefügt. 
%    \begin{macrocode}
      \listadd#1{#3}%
    \fi%
  \fi%
}
%    \end{macrocode}
% \end{macro}^^A \if@tud@list@sorted
% \end{macro}^^A \tud@list@sorted
% \end{macro}^^A \tud@list@@@sort
% \end{macro}^^A \tud@list@@sort
% \end{macro}^^A \tud@list@sort
%
% \iffalse
%</manual>
% \fi
%
% \subsection{Stringmanipulation}
%
% \begin{macro}{\tud@remove@enfold@char}
% \changes{v2.07}{2019/11/08}{neu}^^A
% Entfernt aus der einfachen Expansion des ersten Argumentes am Anfang und Ende 
% das im zweiten Argument angegebene Zeichen.
% \ToDo{mit tudscr-base zusammenführen (hier oder dort)}[v2.07]
%    \begin{macrocode}
\newcommand*\tud@remove@enfold@char[2]{%
  \begingroup%
    \edef\tud@res@b{\expandonce{#1}}%
    \trim@spaces@in\tud@res@b%
    \expandafter\in@\expandafter#2\expandafter{\tud@res@b}%
    \ifin@%
      \let\tud@res@a\@empty%
      \def\tud@res@c##1#2##2\@nil{%
        \IfArgIsEmpty{##1}{}{%
          \ifx\tud@res@a\@empty%
            \def\tud@res@a{##1}%
          \else%
            \appto\tud@res@a{#2##1}%
          \fi%
        }%
        \IfArgIsEmpty{##2}{}{\tud@res@c##2\@nil}%
      }%
      \expandafter\tud@res@c\tud@res@b#2\@nil%
    \else%
      \let\tud@res@a\tud@res@b%
    \fi%
    \edef\tud@res@a{%
      \endgroup%
      \unexpanded{\def#1}{\expandonce\tud@res@a}%
    }%
  \tud@res@a%
}
%    \end{macrocode}
% \end{macro}^^A \tud@remove@enfold@char
%
% \begin{macro}{\tud@replace@in}
% \changes{v2.05}{2015/11/01}{neu}^^A
% \changes{v2.07}{2019/11/08}{neu}^^A
% \begin{macro}{\tud@replace@@in}
% \changes{v2.07}{2019/11/08}{neu}^^A
% Mit diesem Befehl kann in einem gegebenen Makro ein bestimmtes Zeichen durch 
% ein anderes ersetzt werden. Dies wird verwendet, um für Indexbefehle die 
% möglicherweise enthaltenen |@|"~Zeichen oder in Datei- und Pfadangaben 
% Unterstriche zu ersetzen.
%    \begin{macrocode}
\newcommand*\tud@replace@in[3]{%
  \begingroup%
%    \end{macrocode}
% Zunächst wird der Inhalt des ersten Argumentes expandiert. Anschließend 
% wird \cs{tud@res@b} als ein durch \cs{@nil} abgegrenztes Makro mit zwei
% Argumenten definiert, wobei diese durch das im zweiten Argument gegebene 
% \meta{Zeichen} voneinander abgegrenzt werden. Dieses Makro wird nun so lange 
% rekursiv mit dem zweiten Teil aufgerufen, bis dieses leer is. Dabei wird der 
% erste, durch das angegebene zu ersetzende Zeichen Teil sukzessive an 
% \cs{tud@res@c} angehängt und um das im dritten Argument angegebene 
% Ersatzzeichen vervollständigt.
%    \begin{macrocode}
    \edef\tud@res@a{\expandonce{#1}}%
    \let\tud@res@c\@empty%
    \def\tud@res@b##1#2##2\@nil{%
      \IfArgIsEmpty{##2}{%
        \appto\tud@res@c{##1}%
      }{%
        \appto\tud@res@c{##1#3}%
        \tud@res@b##2\@nil%
      }%
    }%
    \expandafter\tud@res@b\tud@res@a#2\@nil%
    \edef\tud@res@a{%
      \endgroup%
      \unexpanded{\def#1}{\expandonce\tud@res@c}%
    }%
  \tud@res@a%
}
%    \end{macrocode}
% Diese Variante sorgt dafür, dass die zu ersetzenden Zeichen alle als Strings 
% behandelt werden.
%    \begin{macrocode}
\newcommand*\tud@replace@@in[3]{%
  \begingroup%
    \protected@edef\tud@res@a{#1}%
    \edef\tud@res@a{\detokenize\expandafter{\tud@res@a}}%
    \edef\tud@res@b{%
      \unexpanded{\tud@replace@in\tud@res@a}{\detokenize{#2}}{\detokenize{#3}}%
    }%
    \tud@res@b%
    \edef\tud@res@a{%
      \endgroup%
      \unexpanded{\def#1}{\tud@res@a}%
    }%
  \tud@res@a%
}
%    \end{macrocode}
% \end{macro}^^A \tud@replace@@in
% \end{macro}^^A \tud@replace@in
%
% \iffalse
%</option>
%<*body>
% \fi
%
% \subsection{Zusätzliche Markup-Befehle}
% \subsubsection{Textauszeichnung}
%
% \begin{macro}{\@pnumwidth}
% \begin{macro}{\@tocrmarg}
% Etwas mehr Platz im Inhaltsverzeichnis für die Seitenzahlen.
% \ToDo{direkt in die Klassen übernehmen}[v2.07]
%    \begin{macrocode}
\renewcommand*\@pnumwidth{2.1em}%
\renewcommand*\@tocrmarg{3.1em}%
%    \end{macrocode}
% \end{macro}^^A \@tocrmarg
% \end{macro}^^A \@pnumwidth
%
% \begin{macro}{\textsbn}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{macro}{\sbnfont}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{macro}{\textsbi}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{macro}{\sbifont}
% \changes{v2.02}{2014/08/16}{neu}^^A
% \begin{macro}{\textttit}
% \changes{v2.07}{2021/06/11}{neu}^^A
% \begin{macro}{\ttitfont}
% \changes{v2.07}{2021/06/11}{neu}^^A
% Kombinierte Auszeichnungsbefehle für Text.
%    \begin{macrocode}
\newcommand*\textsbn{}
\newrobustcmd*\sbnfont{\sffamily\bfseries\upshape}
\DeclareTextFontCommand\textsbn{\sbnfont}
\newcommand*\textsbi{}
\newrobustcmd*\sbifont{\sffamily\bfseries\itshape}
\DeclareTextFontCommand\textsbi{\sbifont}
\newcommand*\textttit{}
\newrobustcmd*\ttitfont{\ttfamily\itshape}
\DeclareTextFontCommand\textttit{\ttitfont}
%    \end{macrocode}
% \end{macro}^^A \ttitfont
% \end{macro}^^A \textttit
% \end{macro}^^A \sbifont
% \end{macro}^^A \textsbi
% \end{macro}^^A \sbnfont
% \end{macro}^^A \textsbn
%
% \begin{macro}{\Logo}
% \changes{v2.07}{2021/06/11}{neu}^^A
% Dieser Befehl wird ein richtiges Kerning beim Setzen verschiedener Logos mit 
% \OpenSans definiert. Die Verwendung von \pkg{hologo} liefert für diese keine 
% befriedigenden Resultate.
% \ToDo{Teile von hologo implementieren, falls cdfont=false}[v2.07]
%    \begin{macrocode}
\newrobustcmd*\Logo[1]{%
  \ifcsundef{tud@logo@#1}{%
    \ClassError{\TUD@Class@Name}{logo `#1' missing}{%
      The necessary macro `\@backslashchar tud@logo@#1'\MessageBreak%
      was never defined.%
    }%
  }{%
    \mbox{\csuse{tud@logo@#1}}%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \Logo
%
% \begin{macro}{\tud@logo@@kern}
% \begin{macro}{\tud@logo@@shift}
% \begin{macro}{\tud@logo@@topscript}
% Diese Befehle dienen dazu, nachfolgend spezielle Logos zu definieren, welche 
% Kerning, vertikales Verschieben oder Skalieren einzelner Lettern ermöglichen.
% Die Implemetierung ist stark am Paket \pkg{hologo} orientiert.
%
% Mit \cs{tud@logo@@kern} wird Kerning eingefügt, wobei im obligatorischen 
% Argument ein prozentualer Faktor für den Basiswert \val{1em} angegeben wird. 
% Mit dem optionalen Argument kann ggf. zusätzliches Kerning für den kursiven 
% Schriftschnitt definiert werden.
%    \begin{macrocode}
\newcommand*\tud@logo@@kern[2][0]{%
  \kern\dimexpr1em*%
    \numexpr\ifdim\the\fontdimen\@ne\font>\z@#1+\fi#2\relax%
  /100\relax%
}
%    \end{macrocode}
% Dieser Befehl verschiebt den im zweiten Argument angegebenen Inhalt vertikal 
% um Basiswert \val{1ex} mutlipliziert mit dem prozentualer Faktor im ersten 
% Argument.
%    \begin{macrocode}
\newcommand*\tud@logo@@shift[2]{%
  \lower\dimexpr1ex*#1/100\relax\hbox{#2}%
}
%    \end{macrocode}
% Der im zweiten Argument gegebene Inhalt wird mit \cs{scriptsize} auf der Höhe
% des im ersten Argumentes angegebenen Inhaltes ausgegeben.
%    \begin{macrocode}
\newcommand*\tud@logo@@topscript[2]{%
  \begingroup%
    \setbox\z@\hbox{#1}%
    \vbox to\ht\z@{%
      \hbox{%
        \check@mathfonts%
        \fontsize\sf@size\z@%
        \math@fontsfalse\selectfont%
        #2%
      }%
      \vss%
    }%
  \endgroup%
}
%    \end{macrocode}
% \end{macro}^^A \tud@logo@@topscript
% \end{macro}^^A \tud@logo@@shift
% \end{macro}^^A \tud@logo@@kern
%
% \begin{macro}{\tud@logo@TeX}
% \begin{macro}{\tud@logo@LaTeX}
% \begin{macro}{\tud@logo@LaTeXe}
% \begin{macro}{\tud@logo@LaTeX3}
% \begin{macro}{\tud@logo@pdfLaTeX}
% \begin{macro}{\tud@logo@LuaLaTeX}
% \begin{macro}{\tud@logo@XeLaTeX}
% \begin{macro}{\tud@logo@BibTeX}
% \begin{macro}{\tud@logo@TeXLive}
% \begin{macro}{\tud@logo@MacTeX}
% \begin{macro}{\tud@logo@MiKTeX}
% \begin{macro}{\tud@logo@LyX}
% Hier werden die Logos definiert, welche sich mit \cs{Logo}\marg{name} 
% ausgeben lassen. Gültige Werte für \meta{name} entsprechen dem letzten Teil 
% des Befehlsnamens (\cs{tud@logo@\meta{name}}).
%    \begin{macrocode}
\newcommand*\tud@logo@TeX{%
  T\tud@logo@@kern[-4]{-21}%
  \tud@logo@@shift{40}{E}%
  \tud@logo@@kern[7]{-6}%
  X\@%
}
\newcommand*\tud@logo@LaTeX{%
  L\tud@logo@@kern[9]{-32}\tud@logo@@topscript{T}{A}%
  \tud@logo@@kern[1]{-13}\Logo{TeX}%
}
\newcommand*\tud@logo@LaTeXe{%
  \Logo{LaTeX}\tud@logo@@kern[-2]{8}%
  \hbox{%
    \m@th%
    \if b\expandafter\@car\f@series x\@nil\csname boldmath\endcsname\fi%
    2$_{\textstyle\varepsilon}$%
  }\@%
}
\expandafter\newcommand\expandafter*\csname tud@logo@LaTeX3\endcsname{%
  \Logo{LaTeX}\tud@logo@@kern[-2]{8}3\@%
}
\newcommand*\tud@logo@pdfLaTeX{pdf\tud@logo@@kern{3}\Logo{LaTeX}}
\newcommand*\tud@logo@LuaLaTeX{Lua\tud@logo@@kern{-1}\Logo{LaTeX}}
\newcommand*\tud@logo@XeLaTeX{%
  X\tud@logo@@kern[-1]{-5}%
  \tud@logo@@shift{40}{\rotatebox[origin=c]{180}{E}}%
  \tud@logo@@kern[1]{-13}%
  \Logo{LaTeX}%
}
\newcommand*\tud@logo@BibTeX{%
  B\tud@logo@@topscript{x}{IB}\tud@logo@@kern{-10}\Logo{TeX}%
}
\newcommand*\tud@logo@TeXLive{%
  \Logo{TeX}\tud@logo@@kern[-5]{20}Live\@%
}
\newcommand*\tud@logo@MacTeX{%
  Mac\tud@logo@@kern{-3}\Logo{TeX}\@%
}
\newcommand*\tud@logo@MiKTeX{MiK\tud@logo@@kern{6}\Logo{TeX}}
\newcommand*\tud@logo@LyX{%
  L\tud@logo@@kern[-3]{-11}%
  \tud@logo@@shift{40}{Y}%
  \tud@logo@@kern[7]{-11}%
  X\@%
}
%    \end{macrocode}
% \end{macro}^^A \tud@logo@LyX
% \end{macro}^^A \tud@logo@MiKTeX
% \end{macro}^^A \tud@logo@MacTeX
% \end{macro}^^A \tud@logo@TeXLive
% \end{macro}^^A \tud@logo@BibTeX
% \end{macro}^^A \tud@logo@XeLaTeX
% \end{macro}^^A \tud@logo@LuaLaTeX
% \end{macro}^^A \tud@logo@pdfLaTeX
% \end{macro}^^A \tud@logo@LaTeX3
% \end{macro}^^A \tud@logo@LaTeXe
% \end{macro}^^A \tud@logo@LaTeX
% \end{macro}^^A \tud@logo@TeX
%
% \subsubsection{Logisches Markup}
%
% \begin{macro}{\tud@english}
% Hiermit wird der Argumentsinhalt mit englischen Trennungsmustern gesetzt,
% falls die Sprache geladen wurde.
%    \begin{macrocode}
\newcommand*\tud@english[1]{#1}
\AtBeginDocument{%
  \iflanguageloaded{english}{%
    \renewcommand*\tud@english[1]{\foreignlanguage{english}{#1}}%
  }{}%
}
%    \end{macrocode}
% \end{macro}^^A \tud@english
%
% \begin{macro}{\tud@url@normalize}
% \changes{v2.07}{2019/11/11}{neu}^^A
% URL-Pfade sauber schreiben und Trennzeichen ggf. ergänzen.
%    \begin{macrocode}
\NewDocumentCommand\tud@url@normalize{m O{https://} m m}{%
  \begingroup%
    \edef\tud@res@a{\trim@spaces{#4}}%
    \def\tud@res@b##1#3/##2#3/##3\@nil{%
      \IfArgIsEmpty{##2}{%
        \def\tud@res@a{##1}%
      }{%
        \def\tud@res@a{##2}%
      }%
    }%
    \expandafter\tud@res@b\tud@res@a #3/#3/\@nil%
    \tud@remove@enfold@char\tud@res@a{/}%
    \edef\tud@res@b{%
      \endgroup%
      \unexpanded{\def#1}{#2#3/\tud@res@a}%
    }%
  \tud@res@b%
}
%    \end{macrocode}
% \end{macro}^^A \tud@url@normalize
% \begin{macro}{\GitHubBase}
% \changes{v2.07}{2019/11/11}{neu}^^A
% \begin{macro}{\tud@github@url@base}
% \changes{v2.07}{2019/11/11}{neu}^^A
% \begin{macro}{\tud@github@url@normalize}
% \changes{v2.07}{2019/11/11}{neu}^^A
% \begin{macro}{\tud@github@url@error}
% \changes{v2.07}{2021/06/16}{neu}^^A
% Angabe der URL des verwendeten GitHub-Repository.
%    \begin{macrocode}
\newcommand*\tud@github@url@normalize[2]{%
  \tud@url@normalize#1{github.com}{#2}%
}
\newcommand*\tud@github@url@base{}
\let\tud@github@url@base\relax
\newcommand*\GitHubBase[1]{%
  \tud@github@url@normalize\tud@github@url@base{#1}%
}
\newcommand*\tud@github@url@error{%
  \ClassError{\TUD@Class@Name}{GitHub repository missing}{%
    No default GitHub repository was set with\MessageBreak%
    `\detokenize{\GitHubBase{<url>}}'. You should either\MessageBreak%
    set a default one or pass it as argument.%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \tud@github@url@error
% \end{macro}^^A \tud@github@url@normalize
% \end{macro}^^A \tud@github@url@base
% \end{macro}^^A \GitHubBase
%
% \begin{macro}{\GitHubRepo}
% \changes{v2.02}{2014/08/16}{neu}^^A
% Auszeichnungsbefehle für Verweise auf ein GitHub-Repository. Die Ausgabe für 
% den Befehl kann mit dem optionalen Argument bestimmt werden. Wird dieses 
% Argument nicht gegeben, wird der letzte Teil der in runden Klammern gegebenen 
% Repository-URL als Grundlage für die Ausgabe genutzt. Das letzte optionale 
% Argument in Guillemets kann entweder als Link auf ein Issue (numerisch) oder 
% aber zum anhängen eines URL-Pfades genutzt werden.
%    \begin{macrocode}
\NewDocumentCommand\GitHubRepo{!o !d() !d<>}{%
  \begingroup%
    \IfValueT{#2}{\tud@github@url@normalize\tud@github@url@base{#2}}%
    \ifx\tud@github@url@base\relax%
      \def\tud@res@a{%
        \endgroup%
        \tud@github@url@error%
      }%
    \else%
      \IfValueTF{#1}{%
        \def\tud@res@c{#1}%
      }{%
        \expandafter\filename@parse\expandafter{\tud@github@url@base}%
        \protected@edef\tud@res@c{%
          \tud@english{GitHub-Repository\nobreakspace\textsbn{\filename@base}}%
        }%
      }%
      \IfValueT{#3}{%
        \edef\tud@res@b{\trim@spaces{#3}}%
        \tud@remove@enfold@char\tud@res@b{/}%
        \Ifnumber{\tud@res@b}{%
          \IfValueF{#1}{\eappto\tud@res@c{\#\tud@res@b}}%
          \eappto{\tud@github@url@base}{/issues/\tud@res@b}%
        }{%
          \eappto{\tud@github@url@base}{/\tud@res@b}%
        }%
      }%
      \protected@edef\tud@res@a{%
        \endgroup%
        \noexpand\href{\tud@github@url@base}{\noexpand\mbox{\tud@res@c}}%
      }%
    \fi%
  \tud@res@a\xspace%
}
%    \end{macrocode}
% \end{macro}^^A \GitHubRepo
%
% \begin{macro}{\GitHubDownload}
% \changes{v2.05g}{2016/11/08}{neu}^^A
% Der Befehl für die Angabe von direkten Downloadlinks.
%    \begin{macrocode}
%<*manual>
\NewDocumentCommand\GitHubDownload{s d() d<> m}{%
  \begingroup%
    \IfValueT{#2}{\tud@github@url@normalize\tud@github@url@base{#2}}%
    \ifx\tud@github@url@base\relax%
      \def\tud@res@a{%
        \endgroup%
        \tud@github@url@error%
      }%
    \else%
      \IfValueTF{#3}{%
        \appto\tud@github@url@base{/releases/download/#3/#4}%
      }{%
        \appto\tud@github@url@base{/releases/latest/download/#4}%
      }%
      \IfBooleanTF{#1}{%
        \def\tud@res@c{\File*{#4}}%
      }{%
        \def\tud@res@c{\InlineDeclaration{\File''{#4}}}%
        \index{Dateien}%
      }%
      \protected@edef\tud@res@a{%
        \endgroup%
        \noexpand\href{\tud@github@url@base}{\noexpand\mbox{\tud@res@c}}%
      }%
    \fi%
  \tud@res@a\xspace%
}
%</manual>
%    \end{macrocode}
% \end{macro}^^A \GitHubDownload
%
% \begin{macro}{\CTAN}
% \changes{v2.05}{2015/11/22}{neu}^^A
% \begin{macro}{\tud@ctan@url@normalize}
% \changes{v2.07}{2019/11/11}{neu}^^A
% Das Markup für einen Link auf \CTAN.
%    \begin{macrocode}
\newcommand*\tud@ctan@url@normalize[2]{%
  \tud@url@normalize#1{ctan.org}{#2}%
}
\NewDocumentCommand\CTAN{!o !d<>}{%
  \begingroup%
    \tud@ctan@url@normalize\tud@res@b{\IfValueT{#2}{#2}}%
    \IfValueTF{#1}{%
      \def\tud@res@c{#1}%
    }{%
      \def\tud@res@c{\tud@english{Comprehensive TeX Archive Network (CTAN)}}%
    }%
    \protected@edef\tud@res@a{%
      \endgroup%
      \noexpand\href{\tud@res@b}{\noexpand\mbox{\tud@res@c}}%
    }%
  \tud@res@a\xspace%
}
%    \end{macrocode}
% \end{macro}^^A \tud@ctan@url@normalize
% \end{macro}^^A \CTAN
%
% \begin{macro}{\TUDForum}
% \begin{macro}{\Forum}
% Der Befehl für die Ausgabe eines Links zum \TUDForum. Das optionale Argument 
% in Guillemets kann genutzt werden, um auf einen spezifisches Beitrag zu 
% verlinken.
%    \begin{macrocode}
\newcommand*\TUDForum{%
  \mbox{T\kern.05em U\kern.05em D-\Logo{LaTeX}-Forum}\xspace%
}
\NewDocumentCommand\Forum{!O{\TUDForum} !d<>}{%
  \begingroup%
    \protected@edef\tud@res@a{%
      \endgroup%
      \noexpand\href%
        {\TUDScriptForum\IfValueT{#2}{viewtopic.php?t=#2}}%
        {\noexpand\mbox{#1}}%
    }%
  \tud@res@a\xspace%
}
%    \end{macrocode}
% \end{macro}^^A \Forum
% \end{macro}^^A \TUDForum
%
% \begin{macro}{\Attention}
% \changes{v2.02}{2014/08/16}{neu}^^A
% Falls irgendetwas besonders hervorgehoben werden sollte.
%    \begin{macrocode}
\newcommand*\Attention[2][\z@]{%
  \marginnote{%
    \tud@setdim\fboxsep{0.25em}%
    \fbox{Achtung!}%
  }[{#1}]%
  \emph{\trim@spaces{#2}}%
}
%    \end{macrocode}
% \end{macro}^^A \Attention
% \begin{macro}{\TUDScriptContactTitle}
% \changes{v2.07}{2019/09/26}{neu}^^A
% Die Angabe der E-Mail-Adresse auf dem Titel innerhalb von \cs{author}.
%    \begin{macrocode}
\newrobustcmd*\TUDScriptContactTitle{%
  \ifundef{\emailaddress}{%
    \footnote{\scriptsize\expandafter\mailto\expandafter{\TUDScriptContact}}%
  }{%
    \expandafter\emailaddress\expandafter{\TUDScriptContact}%
  }%
}
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{\let\TUDScriptContactTitle\relax}%
}
%    \end{macrocode}
% \end{macro}^^A \TUDScriptContactTitle
%
% \begin{macro}{\KOMAScript}
% \begin{macro}{\TUDScript}
% \begin{macro}{\vTUDScript}
% \begin{macro}{\vKOMAScript}
% Für die robuste Verwendung im Text.
%    \begin{macrocode}
\kernel@make@fragile\KOMAScript
\edef\KOMAScript{\noexpand\mbox{\expandonce\KOMAScript}\noexpand\xspace}
\robustify\KOMAScript
\robustify\TUDScript
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{%
    \def\KOMAScript{KOMA-Script{}}%
    \def\TUDScript{TUD-Script{}}%
  }%
}
%    \end{macrocode}
% Diese Befehle geben in der Dokumentation die aktuelle Version von \TUDScript
% sowie die mindestens notwendige Version von \KOMAScript{} aus.
%    \begin{macrocode}
\newcommand*\vTUDScript{v\TUDScriptVersionNumber}
\newcommand*\vKOMAScript{v\TUD@KOMAVersionNumber}
%    \end{macrocode}
% \end{macro}^^A \vKOMAScript
% \end{macro}^^A \vTUDScript
% \end{macro}^^A \TUDScript
% \end{macro}^^A \KOMAScript
%
% \begin{macro}{\CD}
% \begin{macro}{\CDs}
% \begin{macro}{\TUD}
% \begin{macro}{\TnUD}
% \begin{macro}{\TUDCD}
% \changes{v2.05}{2015/11/01}{neu}^^A
% \begin{macro}{\TUDCDs}
% \changes{v2.05}{2015/11/01}{neu}^^A
% \begin{macro}{\DDC}
% Diese Befehle stellen regelmäßig in der Quelltextdokumentatuion und im 
% Handbuch genutzte Textbausteine bereit. Dazu wird der Befehl \cs{xspace} aus 
% dem \pkg{xspace}-Paket genutzt.
%    \begin{macrocode}
\newrobustcmd*\CD{\tud@english{Corporate Design}\xspace}
\newrobustcmd*\CDs{\tud@english{Corporate Designs}\xspace}
\newrobustcmd*\TUD{Technische Universit\"at Dresden\xspace}
\newrobustcmd*\TnUD{Technischen Universit\"at Dresden\xspace}
\newcommand*\TUDCD{\CD der \TnUD}
\newcommand*\TUDCDs{\CDs der \TnUD}
\newrobustcmd*\DDC{%
  \mbox{%
    D\kern.05em R\kern.05em E\kern.05em S\kern.05em %
    D\kern.05em E\kern.05em N\kern.1em-\kern.1em concept%
  }\xspace%
}
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{%
    \def\CD{Corporate Design{}}%
    \def\CDs{Corporate Designs{}}%
    \def\TUD{Technische Universit\"at Dresden{}}%
    \def\TnUD{Technischen Universit\"at Dresden{}}%
    \def\DDC{DRESDEN-concept{}}%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \DDC
% \end{macro}^^A \TUDCDs
% \end{macro}^^A \TUDCD
% \end{macro}^^A \TnUD
% \end{macro}^^A \TUD
% \end{macro}^^A \CDs
% \end{macro}^^A \CD
%
% \begin{macro}{\OpenSans}
% \changes{v2.06}{2018/07/02}{neu}^^A
% \begin{macro}{\Univers}
% \begin{macro}{\DIN}
% Für die Nennung der Schriften spezielle Markos bereitgestellt.
%    \begin{macrocode}
\newrobustcmd*\OpenSans{\textcdbn{Open\nobreakspace Sans}\xspace}
\newrobustcmd*\Univers{\textcdbi{Univers}\xspace}
\newrobustcmd*\DIN{\textcdbi{DIN\nobreakspace Bold}\xspace}
\AfterPackage*{hyperref}{%
  \pdfstringdefDisableCommands{%
    \def\OpenSans{Open Sans{}}%
    \def\Univers{Univers{}}%
    \def\DIN{DIN Bold{}}%
  }%
}
%    \end{macrocode}
% \end{macro}^^A \DIN
% \end{macro}^^A \Univers
% \end{macro}^^A \OpenSans
%
% \iffalse
%</body>
%</manual|doc>
% \fi
%
% \Finale\PrintIndex\PrintChanges\PrintToDos
%
\endinput
